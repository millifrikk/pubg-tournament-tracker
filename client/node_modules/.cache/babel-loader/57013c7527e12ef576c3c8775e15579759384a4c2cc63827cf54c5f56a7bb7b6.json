{"ast":null,"code":"import axios from'axios';// Create custom axios instance with improved configuration\nconst api=axios.create({baseURL:'/api',timeout:120000,// 2 minutes timeout\nheaders:{'Content-Type':'application/json','Accept':'application/json'}});// Request interceptor\napi.interceptors.request.use(config=>{// Get JWT token from local storage if it exists\nconst token=localStorage.getItem('token');// If token exists, add it to the headers\nif(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{console.error('Request error:',error);return Promise.reject(error);});// Response interceptor\napi.interceptors.response.use(response=>{return response;},error=>{var _error$response,_error$response2;// Handle network errors\nif(!error.response){console.error('Network error:',error.message);// If it's a timeout\nif(error.code==='ECONNABORTED'){console.error('Request timed out');}// If it's a network error (ECONNRESET, etc.)\nif(error.message.includes('Network Error')){console.error('Network connection issue - possibly server disconnected');}}// Handle 401 Unauthorized errors (invalid/expired token)\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){// Redirect to login or refresh token\nconsole.log('Authentication error - redirecting to login');}// Handle server errors (500, etc.)\nif(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)>=500){console.error('Server error:',error.response.data);}return Promise.reject(error);});export default api;","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","console","Promise","reject","response","_error$response","_error$response2","message","code","includes","status","log","data"],"sources":["C:/Users/emil/OneDrive/Documents/development/apiDevelopment/pubg-tournament-tracker/client/src/utils/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\n\n// Create custom axios instance with improved configuration\nconst api = axios.create({\n  baseURL: '/api',\n  timeout: 120000, // 2 minutes timeout\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(\n  config => {\n    // Get JWT token from local storage if it exists\n    const token = localStorage.getItem('token');\n    \n    // If token exists, add it to the headers\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    \n    return config;\n  },\n  error => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  response => {\n    return response;\n  },\n  error => {\n    // Handle network errors\n    if (!error.response) {\n      console.error('Network error:', error.message);\n      \n      // If it's a timeout\n      if (error.code === 'ECONNABORTED') {\n        console.error('Request timed out');\n      }\n      \n      // If it's a network error (ECONNRESET, etc.)\n      if (error.message.includes('Network Error')) {\n        console.error('Network connection issue - possibly server disconnected');\n      }\n    }\n    \n    // Handle 401 Unauthorized errors (invalid/expired token)\n    if (error.response?.status === 401) {\n      // Redirect to login or refresh token\n      console.log('Authentication error - redirecting to login');\n    }\n    \n    // Handle server errors (500, etc.)\n    if (error.response?.status >= 500) {\n      console.error('Server error:', error.response.data);\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,GAAG,CAAGD,KAAK,CAACE,MAAM,CAAC,CACvBC,OAAO,CAAE,MAAM,CACfC,OAAO,CAAE,MAAM,CAAE;AACjBC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAClC,QAAQ,CAAE,kBACZ,CACF,CAAC,CAAC,CAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BC,MAAM,EAAI,CACR;AACA,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C;AACA,GAAIF,KAAK,CAAE,CACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,CAAG,UAAUH,KAAK,EAAE,CAClD,CAEA,MAAO,CAAAD,MAAM,CACf,CAAC,CACDK,KAAK,EAAI,CACPC,OAAO,CAACD,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACtC,MAAO,CAAAE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACAb,GAAG,CAACK,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC3BU,QAAQ,EAAI,CACV,MAAO,CAAAA,QAAQ,CACjB,CAAC,CACDJ,KAAK,EAAI,KAAAK,eAAA,CAAAC,gBAAA,CACP;AACA,GAAI,CAACN,KAAK,CAACI,QAAQ,CAAE,CACnBH,OAAO,CAACD,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAACO,OAAO,CAAC,CAE9C;AACA,GAAIP,KAAK,CAACQ,IAAI,GAAK,cAAc,CAAE,CACjCP,OAAO,CAACD,KAAK,CAAC,mBAAmB,CAAC,CACpC,CAEA;AACA,GAAIA,KAAK,CAACO,OAAO,CAACE,QAAQ,CAAC,eAAe,CAAC,CAAE,CAC3CR,OAAO,CAACD,KAAK,CAAC,yDAAyD,CAAC,CAC1E,CACF,CAEA;AACA,GAAI,EAAAK,eAAA,CAAAL,KAAK,CAACI,QAAQ,UAAAC,eAAA,iBAAdA,eAAA,CAAgBK,MAAM,IAAK,GAAG,CAAE,CAClC;AACAT,OAAO,CAACU,GAAG,CAAC,6CAA6C,CAAC,CAC5D,CAEA;AACA,GAAI,EAAAL,gBAAA,CAAAN,KAAK,CAACI,QAAQ,UAAAE,gBAAA,iBAAdA,gBAAA,CAAgBI,MAAM,GAAI,GAAG,CAAE,CACjCT,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAACI,QAAQ,CAACQ,IAAI,CAAC,CACrD,CAEA,MAAO,CAAAV,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,cAAe,CAAAb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}