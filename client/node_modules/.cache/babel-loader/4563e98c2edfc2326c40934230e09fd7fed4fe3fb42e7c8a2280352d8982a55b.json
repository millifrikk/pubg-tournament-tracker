{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{useParams,useLocation,useNavigate}from'react-router-dom';import{useSocket}from'../../contexts/SocketContext';import matchesService from'../../services/matchesServiceEnhanced';import LiveMatchFeed from'../../components/common/LiveMatchFeed';import MatchHeatmap from'../../components/visualizations/MatchHeatmap';import MatchTimeline from'../../components/visualizations/MatchTimeline';import PlayerPerformance from'../../components/visualizations/PlayerPerformance';import{getMatchType,getMatchTypeDescription,formatMatchDate,formatMatchDuration,getRelativeTime}from'../../utils/matchUtils';// Import optimized styles instead of regular ones\nimport'../../styles/matchDetails-optimized.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MatchDetails=()=>{var _match$included,_match$included2;const{id:matchId}=useParams();const location=useLocation();const navigate=useNavigate();const[match,setMatch]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[activeTab,setActiveTab]=useState('overview');const[selectedPlayer,setSelectedPlayer]=useState(null);const{joinMatch,leaveMatch}=useSocket();const[refreshing,setRefreshing]=useState(false);// Parse query parameters\nconst queryParams=new URLSearchParams(location.search);const heatmapType=queryParams.get('heatmapType')||'positions';// Debounce function to prevent multiple rapid execution of the same function\nconst useDebounce=(fn,delay)=>{const timerRef=React.useRef(null);return React.useCallback(function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}if(timerRef.current){clearTimeout(timerRef.current);}timerRef.current=setTimeout(()=>{fn(...args);timerRef.current=null;},delay);},[fn,delay]);};// Fetch data function - wrapped in useCallback to prevent recreation on each render\nconst fetchMatchDataInternal=useCallback(async function(){let bypassCache=arguments.length>0&&arguments[0]!==undefined?arguments[0]:false;try{if(bypassCache){setRefreshing(true);}else{setLoading(true);}// Use the matchesService to get match data\nconst matchData=await matchesService.getMatchDetails(matchId,'steam',bypassCache);console.log('Match data fetched:',matchData);// Set match data state\nsetMatch(matchData);setError(null);// Auto-select first player if none selected - using a safe approach\nif(matchData.included){const participants=matchData.included.filter(item=>{var _item$attributes,_item$attributes$stat;return item.type==='participant'&&((_item$attributes=item.attributes)===null||_item$attributes===void 0?void 0:(_item$attributes$stat=_item$attributes.stats)===null||_item$attributes$stat===void 0?void 0:_item$attributes$stat.playerId);});if(participants.length>0&&!selectedPlayer){var _participants$0$attri,_participants$0$attri2;const firstPlayerId=((_participants$0$attri=participants[0].attributes)===null||_participants$0$attri===void 0?void 0:(_participants$0$attri2=_participants$0$attri.stats)===null||_participants$0$attri2===void 0?void 0:_participants$0$attri2.playerId)||null;if(firstPlayerId){// Use setTimeout to avoid potential state update loops\nsetTimeout(()=>{setSelectedPlayer(firstPlayerId);},0);}}}}catch(err){console.error('Error fetching match data:',err);setError(err.message||'Failed to load match data');}finally{setLoading(false);setRefreshing(false);}},[matchId,selectedPlayer]);// Include selectedPlayer but handle carefully inside\n// Create a debounced version of the fetch function to prevent rapid API calls\nconst fetchMatchData=useDebounce(fetchMatchDataInternal,300);// Use a reference to track if this is the first render\nconst isFirstRender=React.useRef(true);// Load active tab from URL params on mount or when location changes\nuseEffect(()=>{const tabParam=queryParams.get('tab');if(tabParam&&['overview','heatmap','timeline','players','live'].includes(tabParam)){// Only update if it's different to avoid render loops\nif(tabParam!==activeTab){setActiveTab(tabParam);}}},[location.search]);// Only depend on location.search, not activeTab\n// Initialize data on component mount - minimizing dependencies\nuseEffect(()=>{console.log(`MatchDetails component mounting for matchId: ${matchId}`);// Join match room for real-time updates - only if socket is available\nif(joinMatch){// Slight delay to ensure socket is ready\nsetTimeout(()=>{joinMatch(matchId);},100);}// Fetch match data only once on mount\nfetchMatchData(false);// Clean up when unmounting\nreturn()=>{console.log(`MatchDetails component unmounting for matchId: ${matchId}`);if(leaveMatch){leaveMatch(matchId);}};// eslint-disable-next-line react-hooks/exhaustive-deps\n},[matchId]);// Only depend on matchId, other dependencies handled manually\n// Handle refresh button click - memoize to avoid recreating on every render\nconst handleRefresh=useCallback(()=>{console.log('Manually refreshing match data');fetchMatchData(true);// bypass cache\n},[fetchMatchData]);// Handle tab change - memoize to avoid recreating on every render\nconst handleTabChange=useCallback(tab=>{if(tab===activeTab)return;// Don't update if it's the same tab\nconsole.log(`Changing tab to: ${tab}`);setActiveTab(tab);// Update URL without full refresh - use replace to prevent adding to history\nconst params=new URLSearchParams(location.search);params.set('tab',tab);navigate(`${location.pathname}?${params.toString()}`,{replace:true});},[activeTab,location.pathname,location.search,navigate]);// Handle heatmap type change - memoize to avoid recreating on every render\nconst handleHeatmapTypeChange=useCallback(type=>{// Skip if it's the same type\nif(type===heatmapType)return;console.log(`Changing heatmap type to: ${type}`);const params=new URLSearchParams(location.search);params.set('heatmapType',type);params.set('tab','heatmap');navigate(`${location.pathname}?${params.toString()}`,{replace:true});},[heatmapType,location.pathname,location.search,navigate]);if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"match-details-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"page-title\",children:\"Match Details\"}),/*#__PURE__*/_jsx(\"div\",{className:\"loading-container\",children:\"Loading match data...\"})]})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"match-details-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"page-title\",children:\"Match Details\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"error-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Error Loading Match\"}),/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(-1),children:\"Go Back\"})]})]})});}if(!match){return/*#__PURE__*/_jsx(\"div\",{className:\"match-details-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"page-title\",children:\"Match Details\"}),/*#__PURE__*/_jsx(\"div\",{className:\"error-container\",children:\"Match not found\"})]})});}// Extract match details - with proper null checks\nconst matchData=match.data||{};const matchAttributes=matchData.attributes||{};const mapName=matchAttributes.mapName||'Unknown Map';const gameMode=matchAttributes.gameMode||'Unknown Mode';const createdAt=matchAttributes.createdAt||null;const formattedCreatedAt=createdAt?formatMatchDate(createdAt):'Unknown Date';const relativeTime=createdAt?getRelativeTime(createdAt):'Unknown Date';const matchDuration=matchAttributes.duration||0;// Extract participants and teams\nconst participants=((_match$included=match.included)===null||_match$included===void 0?void 0:_match$included.filter(item=>item.type==='participant'))||[];const rosters=((_match$included2=match.included)===null||_match$included2===void 0?void 0:_match$included2.filter(item=>item.type==='roster'))||[];// Get match type\nconst matchType=getMatchType(match);const matchTypeLabel=getMatchTypeDescription(matchType);return/*#__PURE__*/_jsx(\"div\",{className:\"match-details-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-left\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"back-button\",onClick:()=>{// Navigate back to the correct path\nnavigate('/matches/search');},title:\"Back to search results\",children:\"\\u2190 Back\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"page-title\",children:\"Match Details\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"refresh-button\",onClick:handleRefresh,disabled:refreshing,children:refreshing?'Refreshing...':'Refresh'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-meta\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-id\",children:[\"ID: \",matchId]}),/*#__PURE__*/_jsx(\"div\",{className:`match-type-badge ${(matchType===null||matchType===void 0?void 0:matchType.toLowerCase())||'unknown'}`,children:matchTypeLabel}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-info\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"match-map\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Map:\"}),\" \",mapName]}),/*#__PURE__*/_jsxs(\"span\",{className:\"match-mode\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Mode:\"}),\" \",gameMode]}),/*#__PURE__*/_jsxs(\"span\",{className:\"match-time\",title:formattedCreatedAt,children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Played:\"}),\" \",relativeTime]}),/*#__PURE__*/_jsxs(\"span\",{className:\"match-duration\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Duration:\"}),\" \",formatMatchDuration(matchDuration)]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:`tab-btn ${activeTab==='overview'?'active':''}`,onClick:()=>handleTabChange('overview'),children:\"Overview\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab-btn ${activeTab==='heatmap'?'active':''}`,onClick:()=>handleTabChange('heatmap'),children:\"Heatmap\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab-btn ${activeTab==='timeline'?'active':''}`,onClick:()=>handleTabChange('timeline'),children:\"Timeline\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab-btn ${activeTab==='players'?'active':''}`,onClick:()=>handleTabChange('players'),children:\"Player Stats\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab-btn ${activeTab==='live'?'active':''}`,onClick:()=>handleTabChange('live'),children:\"Live Feed\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[activeTab==='overview'&&/*#__PURE__*/_jsx(\"div\",{className:\"overview-tab\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"match-overview\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"teams-overview\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Teams & Placement\"}),/*#__PURE__*/_jsx(\"div\",{className:\"teams-grid\",children:rosters.filter(roster=>{var _roster$attributes,_roster$attributes$st;return roster===null||roster===void 0?void 0:(_roster$attributes=roster.attributes)===null||_roster$attributes===void 0?void 0:(_roster$attributes$st=_roster$attributes.stats)===null||_roster$attributes$st===void 0?void 0:_roster$attributes$st.rank;})// Filter out any invalid rosters\n.sort((a,b)=>{var _a$attributes,_a$attributes$stats,_b$attributes,_b$attributes$stats;return(((_a$attributes=a.attributes)===null||_a$attributes===void 0?void 0:(_a$attributes$stats=_a$attributes.stats)===null||_a$attributes$stats===void 0?void 0:_a$attributes$stats.rank)||999)-(((_b$attributes=b.attributes)===null||_b$attributes===void 0?void 0:(_b$attributes$stats=_b$attributes.stats)===null||_b$attributes$stats===void 0?void 0:_b$attributes$stats.rank)||999);}).map(roster=>{var _roster$attributes2,_roster$attributes2$s,_roster$attributes3,_roster$relationships,_roster$relationships2,_roster$relationships3;const teamRank=((_roster$attributes2=roster.attributes)===null||_roster$attributes2===void 0?void 0:(_roster$attributes2$s=_roster$attributes2.stats)===null||_roster$attributes2$s===void 0?void 0:_roster$attributes2$s.rank)||999;const teamId=roster.id;const won=((_roster$attributes3=roster.attributes)===null||_roster$attributes3===void 0?void 0:_roster$attributes3.won)==='true';const playerIds=((_roster$relationships=roster.relationships)===null||_roster$relationships===void 0?void 0:(_roster$relationships2=_roster$relationships.participants)===null||_roster$relationships2===void 0?void 0:(_roster$relationships3=_roster$relationships2.data)===null||_roster$relationships3===void 0?void 0:_roster$relationships3.map(p=>p.id))||[];const teamPlayers=participants.filter(p=>playerIds.includes(p.id));return/*#__PURE__*/_jsxs(\"div\",{className:`team-card rank-${teamRank} ${won?'winner':''}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"team-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"team-rank\",children:[\"#\",teamRank,won&&' 🏆']}),/*#__PURE__*/_jsxs(\"div\",{className:\"team-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"team-kills\",children:[teamPlayers.reduce((sum,p)=>{var _p$attributes,_p$attributes$stats;return sum+(((_p$attributes=p.attributes)===null||_p$attributes===void 0?void 0:(_p$attributes$stats=_p$attributes.stats)===null||_p$attributes$stats===void 0?void 0:_p$attributes$stats.kills)||0);},0),\" kills\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"team-damage\",children:[Math.round(teamPlayers.reduce((sum,p)=>{var _p$attributes2,_p$attributes2$stats;return sum+(((_p$attributes2=p.attributes)===null||_p$attributes2===void 0?void 0:(_p$attributes2$stats=_p$attributes2.stats)===null||_p$attributes2$stats===void 0?void 0:_p$attributes2$stats.damageDealt)||0);},0)),\" damage\"]})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"team-players\",children:teamPlayers.map(player=>{var _player$attributes,_player$attributes$st,_player$attributes2,_player$attributes2$s,_player$attributes3,_player$attributes3$s,_player$attributes4,_player$attributes4$s,_player$attributes5,_player$attributes5$s,_player$attributes6,_player$attributes6$s,_player$attributes7,_player$attributes7$s;return/*#__PURE__*/_jsxs(\"div\",{className:\"player-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"player-name\",children:[((_player$attributes=player.attributes)===null||_player$attributes===void 0?void 0:(_player$attributes$st=_player$attributes.stats)===null||_player$attributes$st===void 0?void 0:_player$attributes$st.name)||'Unknown Player',((_player$attributes2=player.attributes)===null||_player$attributes2===void 0?void 0:(_player$attributes2$s=_player$attributes2.stats)===null||_player$attributes2$s===void 0?void 0:_player$attributes2$s.deathType)==='alive'&&' 🔄']}),/*#__PURE__*/_jsxs(\"div\",{className:\"player-stats\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"kills\",title:\"Kills\",children:((_player$attributes3=player.attributes)===null||_player$attributes3===void 0?void 0:(_player$attributes3$s=_player$attributes3.stats)===null||_player$attributes3$s===void 0?void 0:_player$attributes3$s.kills)||0}),/*#__PURE__*/_jsx(\"span\",{className:\"assists\",title:\"Assists\",children:((_player$attributes4=player.attributes)===null||_player$attributes4===void 0?void 0:(_player$attributes4$s=_player$attributes4.stats)===null||_player$attributes4$s===void 0?void 0:_player$attributes4$s.assists)||0}),/*#__PURE__*/_jsx(\"span\",{className:\"damage\",title:\"Damage\",children:Math.round(((_player$attributes5=player.attributes)===null||_player$attributes5===void 0?void 0:(_player$attributes5$s=_player$attributes5.stats)===null||_player$attributes5$s===void 0?void 0:_player$attributes5$s.damageDealt)||0)}),((_player$attributes6=player.attributes)===null||_player$attributes6===void 0?void 0:(_player$attributes6$s=_player$attributes6.stats)===null||_player$attributes6$s===void 0?void 0:_player$attributes6$s.headshotKills)>0&&/*#__PURE__*/_jsxs(\"span\",{className:\"headshots\",title:\"Headshot Kills\",children:[\"\\uD83C\\uDFAF \",(_player$attributes7=player.attributes)===null||_player$attributes7===void 0?void 0:(_player$attributes7$s=_player$attributes7.stats)===null||_player$attributes7$s===void 0?void 0:_player$attributes7$s.headshotKills]})]})]},player.id);})})]},teamId);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-stats-summary\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Match Summary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stat\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Total Players\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:participants.length||0})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stat\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Total Teams\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:rosters.length||0})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stat\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Total Kills\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:participants.reduce((sum,p)=>{var _p$attributes3,_p$attributes3$stats;return sum+(((_p$attributes3=p.attributes)===null||_p$attributes3===void 0?void 0:(_p$attributes3$stats=_p$attributes3.stats)===null||_p$attributes3$stats===void 0?void 0:_p$attributes3$stats.kills)||0);},0)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stat\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Avg. Kills/Player\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:participants.length>0?(participants.reduce((sum,p)=>{var _p$attributes4,_p$attributes4$stats;return sum+(((_p$attributes4=p.attributes)===null||_p$attributes4===void 0?void 0:(_p$attributes4$stats=_p$attributes4.stats)===null||_p$attributes4$stats===void 0?void 0:_p$attributes4$stats.kills)||0);},0)/participants.length).toFixed(1):'0.0'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stat\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Longest Kill\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-value\",children:[Math.max(...participants.map(p=>{var _p$attributes5,_p$attributes5$stats;return((_p$attributes5=p.attributes)===null||_p$attributes5===void 0?void 0:(_p$attributes5$stats=_p$attributes5.stats)===null||_p$attributes5$stats===void 0?void 0:_p$attributes5$stats.longestKill)||0;})).toFixed(1),\"m\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stat\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Headshot Kills\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:participants.reduce((sum,p)=>{var _p$attributes6,_p$attributes6$stats;return sum+(((_p$attributes6=p.attributes)===null||_p$attributes6===void 0?void 0:(_p$attributes6$stats=_p$attributes6.stats)===null||_p$attributes6$stats===void 0?void 0:_p$attributes6$stats.headshotKills)||0);},0)})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"data-source-info\",children:/*#__PURE__*/_jsx(\"p\",{children:refreshing?'Refreshing data...':'Data may be cached to avoid rate limits. Click \"Refresh\" for the latest data.'})})]})]})}),activeTab==='heatmap'&&/*#__PURE__*/_jsxs(\"div\",{className:\"heatmap-tab\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"heatmap-controls\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Heatmap Type:\"}),/*#__PURE__*/_jsxs(\"select\",{value:heatmapType,onChange:e=>handleHeatmapTypeChange(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"positions\",children:\"Player Positions\"}),/*#__PURE__*/_jsx(\"option\",{value:\"kills\",children:\"Kill Locations\"}),/*#__PURE__*/_jsx(\"option\",{value:\"deaths\",children:\"Death Locations\"}),/*#__PURE__*/_jsx(\"option\",{value:\"damage\",children:\"Damage Locations\"}),/*#__PURE__*/_jsx(\"option\",{value:\"drops\",children:\"Hot Drop Areas\"})]})]}),/*#__PURE__*/_jsx(MatchHeatmap,{matchId:matchId,type:heatmapType})]}),activeTab==='timeline'&&/*#__PURE__*/_jsx(\"div\",{className:\"timeline-tab\",children:/*#__PURE__*/_jsx(MatchTimeline,{matchId:matchId})}),activeTab==='players'&&/*#__PURE__*/_jsxs(\"div\",{className:\"players-tab\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"player-selector\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"player-select\",children:\"Select Player:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"player-select\",value:selectedPlayer||'',onChange:e=>setSelectedPlayer(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a player\"}),participants.filter(player=>{var _player$attributes8,_player$attributes8$s;return(_player$attributes8=player.attributes)===null||_player$attributes8===void 0?void 0:(_player$attributes8$s=_player$attributes8.stats)===null||_player$attributes8$s===void 0?void 0:_player$attributes8$s.name;})// Only show players with valid names\n.sort((a,b)=>{var _a$attributes2,_a$attributes2$stats,_b$attributes2,_b$attributes2$stats;return(((_a$attributes2=a.attributes)===null||_a$attributes2===void 0?void 0:(_a$attributes2$stats=_a$attributes2.stats)===null||_a$attributes2$stats===void 0?void 0:_a$attributes2$stats.name)||'').localeCompare(((_b$attributes2=b.attributes)===null||_b$attributes2===void 0?void 0:(_b$attributes2$stats=_b$attributes2.stats)===null||_b$attributes2$stats===void 0?void 0:_b$attributes2$stats.name)||'');}).map(player=>{var _player$attributes9,_player$attributes9$s,_player$attributes10,_player$attributes10$,_player$attributes11,_player$attributes11$;return/*#__PURE__*/_jsxs(\"option\",{value:((_player$attributes9=player.attributes)===null||_player$attributes9===void 0?void 0:(_player$attributes9$s=_player$attributes9.stats)===null||_player$attributes9$s===void 0?void 0:_player$attributes9$s.playerId)||'',children:[((_player$attributes10=player.attributes)===null||_player$attributes10===void 0?void 0:(_player$attributes10$=_player$attributes10.stats)===null||_player$attributes10$===void 0?void 0:_player$attributes10$.name)||'Unknown Player',\"(\",((_player$attributes11=player.attributes)===null||_player$attributes11===void 0?void 0:(_player$attributes11$=_player$attributes11.stats)===null||_player$attributes11$===void 0?void 0:_player$attributes11$.kills)||0,\" kills)\"]},player.id);})]})]}),selectedPlayer?/*#__PURE__*/_jsx(PlayerPerformance,{matchId:matchId,accountId:selectedPlayer}):/*#__PURE__*/_jsx(\"div\",{className:\"no-player-selected\",children:\"Please select a player to view detailed statistics\"})]}),activeTab==='live'&&/*#__PURE__*/_jsx(\"div\",{className:\"live-tab\",children:/*#__PURE__*/_jsx(LiveMatchFeed,{matchId:matchId,initialMatchData:match})})]})]})});};export default MatchDetails;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useParams","useLocation","useNavigate","useSocket","matchesService","LiveMatchFeed","MatchHeatmap","MatchTimeline","PlayerPerformance","getMatchType","getMatchTypeDescription","formatMatchDate","formatMatchDuration","getRelativeTime","jsx","_jsx","jsxs","_jsxs","MatchDetails","_match$included","_match$included2","id","matchId","location","navigate","match","setMatch","loading","setLoading","error","setError","activeTab","setActiveTab","selectedPlayer","setSelectedPlayer","joinMatch","leaveMatch","refreshing","setRefreshing","queryParams","URLSearchParams","search","heatmapType","get","useDebounce","fn","delay","timerRef","useRef","_len","arguments","length","args","Array","_key","current","clearTimeout","setTimeout","fetchMatchDataInternal","bypassCache","undefined","matchData","getMatchDetails","console","log","included","participants","filter","item","_item$attributes","_item$attributes$stat","type","attributes","stats","playerId","_participants$0$attri","_participants$0$attri2","firstPlayerId","err","message","fetchMatchData","isFirstRender","tabParam","includes","handleRefresh","handleTabChange","tab","params","set","pathname","toString","replace","handleHeatmapTypeChange","className","children","onClick","data","matchAttributes","mapName","gameMode","createdAt","formattedCreatedAt","relativeTime","matchDuration","duration","rosters","matchType","matchTypeLabel","title","disabled","toLowerCase","roster","_roster$attributes","_roster$attributes$st","rank","sort","a","b","_a$attributes","_a$attributes$stats","_b$attributes","_b$attributes$stats","map","_roster$attributes2","_roster$attributes2$s","_roster$attributes3","_roster$relationships","_roster$relationships2","_roster$relationships3","teamRank","teamId","won","playerIds","relationships","p","teamPlayers","reduce","sum","_p$attributes","_p$attributes$stats","kills","Math","round","_p$attributes2","_p$attributes2$stats","damageDealt","player","_player$attributes","_player$attributes$st","_player$attributes2","_player$attributes2$s","_player$attributes3","_player$attributes3$s","_player$attributes4","_player$attributes4$s","_player$attributes5","_player$attributes5$s","_player$attributes6","_player$attributes6$s","_player$attributes7","_player$attributes7$s","name","deathType","assists","headshotKills","_p$attributes3","_p$attributes3$stats","_p$attributes4","_p$attributes4$stats","toFixed","max","_p$attributes5","_p$attributes5$stats","longestKill","_p$attributes6","_p$attributes6$stats","value","onChange","e","target","htmlFor","_player$attributes8","_player$attributes8$s","_a$attributes2","_a$attributes2$stats","_b$attributes2","_b$attributes2$stats","localeCompare","_player$attributes9","_player$attributes9$s","_player$attributes10","_player$attributes10$","_player$attributes11","_player$attributes11$","accountId","initialMatchData"],"sources":["C:/Users/emil/OneDrive/Documents/development/apiDevelopment/pubg-tournament-tracker/client/src/pages/matches/MatchDetails.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { useSocket } from '../../contexts/SocketContext';\nimport matchesService from '../../services/matchesServiceEnhanced';\nimport LiveMatchFeed from '../../components/common/LiveMatchFeed';\nimport MatchHeatmap from '../../components/visualizations/MatchHeatmap';\nimport MatchTimeline from '../../components/visualizations/MatchTimeline';\nimport PlayerPerformance from '../../components/visualizations/PlayerPerformance';\nimport { getMatchType, getMatchTypeDescription, formatMatchDate, formatMatchDuration, getRelativeTime } from '../../utils/matchUtils';\n// Import optimized styles instead of regular ones\nimport '../../styles/matchDetails-optimized.css';\n\nconst MatchDetails = () => {\n  const { id: matchId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [match, setMatch] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [selectedPlayer, setSelectedPlayer] = useState(null);\n  const { joinMatch, leaveMatch } = useSocket();\n  const [refreshing, setRefreshing] = useState(false);\n  \n  // Parse query parameters\n  const queryParams = new URLSearchParams(location.search);\n  const heatmapType = queryParams.get('heatmapType') || 'positions';\n  \n  // Debounce function to prevent multiple rapid execution of the same function\n  const useDebounce = (fn, delay) => {\n    const timerRef = React.useRef(null);\n    \n    return React.useCallback((...args) => {\n      if (timerRef.current) {\n        clearTimeout(timerRef.current);\n      }\n      timerRef.current = setTimeout(() => {\n        fn(...args);\n        timerRef.current = null;\n      }, delay);\n    }, [fn, delay]);\n  };\n  \n  // Fetch data function - wrapped in useCallback to prevent recreation on each render\n  const fetchMatchDataInternal = useCallback(async (bypassCache = false) => {\n    try {\n      if (bypassCache) {\n        setRefreshing(true);\n      } else {\n        setLoading(true);\n      }\n      \n      // Use the matchesService to get match data\n      const matchData = await matchesService.getMatchDetails(matchId, 'steam', bypassCache);\n      console.log('Match data fetched:', matchData);\n      \n      // Set match data state\n      setMatch(matchData);\n      setError(null);\n      \n      // Auto-select first player if none selected - using a safe approach\n      if (matchData.included) {\n        const participants = matchData.included.filter(item => \n          item.type === 'participant' && \n          item.attributes?.stats?.playerId\n        );\n        \n        if (participants.length > 0 && !selectedPlayer) {\n          const firstPlayerId = participants[0].attributes?.stats?.playerId || null;\n          if (firstPlayerId) {\n            // Use setTimeout to avoid potential state update loops\n            setTimeout(() => {\n              setSelectedPlayer(firstPlayerId);\n            }, 0);\n          }\n        }\n      }\n    } catch (err) {\n      console.error('Error fetching match data:', err);\n      setError(err.message || 'Failed to load match data');\n    } finally {\n      setLoading(false);\n      setRefreshing(false);\n    }\n  }, [matchId, selectedPlayer]); // Include selectedPlayer but handle carefully inside\n  \n  // Create a debounced version of the fetch function to prevent rapid API calls\n  const fetchMatchData = useDebounce(fetchMatchDataInternal, 300);\n  \n  // Use a reference to track if this is the first render\n  const isFirstRender = React.useRef(true);\n  \n  // Load active tab from URL params on mount or when location changes\n  useEffect(() => {\n    const tabParam = queryParams.get('tab');\n    if (tabParam && ['overview', 'heatmap', 'timeline', 'players', 'live'].includes(tabParam)) {\n      // Only update if it's different to avoid render loops\n      if (tabParam !== activeTab) {\n        setActiveTab(tabParam);\n      }\n    }\n  }, [location.search]); // Only depend on location.search, not activeTab\n  \n  // Initialize data on component mount - minimizing dependencies\n  useEffect(() => {\n    console.log(`MatchDetails component mounting for matchId: ${matchId}`);\n    \n    // Join match room for real-time updates - only if socket is available\n    if (joinMatch) {\n      // Slight delay to ensure socket is ready\n      setTimeout(() => {\n        joinMatch(matchId);\n      }, 100);\n    }\n    \n    // Fetch match data only once on mount\n    fetchMatchData(false);\n    \n    // Clean up when unmounting\n    return () => {\n      console.log(`MatchDetails component unmounting for matchId: ${matchId}`);\n      if (leaveMatch) {\n        leaveMatch(matchId);\n      }\n    };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [matchId]); // Only depend on matchId, other dependencies handled manually\n  \n  // Handle refresh button click - memoize to avoid recreating on every render\n  const handleRefresh = useCallback(() => {\n    console.log('Manually refreshing match data');\n    fetchMatchData(true); // bypass cache\n  }, [fetchMatchData]);\n  \n  // Handle tab change - memoize to avoid recreating on every render\n  const handleTabChange = useCallback((tab) => {\n    if (tab === activeTab) return; // Don't update if it's the same tab\n    \n    console.log(`Changing tab to: ${tab}`);\n    setActiveTab(tab);\n    \n    // Update URL without full refresh - use replace to prevent adding to history\n    const params = new URLSearchParams(location.search);\n    params.set('tab', tab);\n    navigate(`${location.pathname}?${params.toString()}`, { replace: true });\n  }, [activeTab, location.pathname, location.search, navigate]);\n  \n  // Handle heatmap type change - memoize to avoid recreating on every render\n  const handleHeatmapTypeChange = useCallback((type) => {\n    // Skip if it's the same type\n    if (type === heatmapType) return;\n    \n    console.log(`Changing heatmap type to: ${type}`);\n    const params = new URLSearchParams(location.search);\n    params.set('heatmapType', type);\n    params.set('tab', 'heatmap');\n    navigate(`${location.pathname}?${params.toString()}`, { replace: true });\n  }, [heatmapType, location.pathname, location.search, navigate]);\n  \n  if (loading) {\n    return (\n      <div className=\"match-details-page\">\n        <div className=\"container\">\n          <h1 className=\"page-title\">Match Details</h1>\n          <div className=\"loading-container\">Loading match data...</div>\n        </div>\n      </div>\n    );\n  }\n  \n  if (error) {\n    return (\n      <div className=\"match-details-page\">\n        <div className=\"container\">\n          <h1 className=\"page-title\">Match Details</h1>\n          <div className=\"error-container\">\n            <h2>Error Loading Match</h2>\n            <p>{error}</p>\n            <button onClick={() => navigate(-1)}>Go Back</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  if (!match) {\n    return (\n      <div className=\"match-details-page\">\n        <div className=\"container\">\n          <h1 className=\"page-title\">Match Details</h1>\n          <div className=\"error-container\">Match not found</div>\n        </div>\n      </div>\n    );\n  }\n  \n  // Extract match details - with proper null checks\n  const matchData = match.data || {};\n  const matchAttributes = matchData.attributes || {};\n  const mapName = matchAttributes.mapName || 'Unknown Map';\n  const gameMode = matchAttributes.gameMode || 'Unknown Mode';\n  const createdAt = matchAttributes.createdAt || null;\n  const formattedCreatedAt = createdAt ? formatMatchDate(createdAt) : 'Unknown Date';\n  const relativeTime = createdAt ? getRelativeTime(createdAt) : 'Unknown Date';\n  const matchDuration = matchAttributes.duration || 0;\n  \n  // Extract participants and teams\n  const participants = match.included?.filter(item => item.type === 'participant') || [];\n  const rosters = match.included?.filter(item => item.type === 'roster') || [];\n  \n  // Get match type\n  const matchType = getMatchType(match);\n  const matchTypeLabel = getMatchTypeDescription(matchType);\n  \n  return (\n    <div className=\"match-details-page\">\n      <div className=\"container\">\n        <div className=\"match-header\">\n          <div className=\"header-content\">\n            <div className=\"header-left\">\n              <button \n                className=\"back-button\" \n                onClick={() => {\n                  // Navigate back to the correct path\n                  navigate('/matches/search');\n                }}\n                title=\"Back to search results\"\n              >\n                ← Back\n              </button>\n              <h1 className=\"page-title\">Match Details</h1>\n            </div>\n            <button \n              className=\"refresh-button\" \n              onClick={handleRefresh} \n              disabled={refreshing}\n            >\n              {refreshing ? 'Refreshing...' : 'Refresh'}\n            </button>\n          </div>\n          <div className=\"match-meta\">\n            <div className=\"match-id\">ID: {matchId}</div>\n            <div className={`match-type-badge ${matchType?.toLowerCase() || 'unknown'}`}>\n              {matchTypeLabel}\n            </div>\n            <div className=\"match-info\">\n              <span className=\"match-map\"><strong>Map:</strong> {mapName}</span>\n              <span className=\"match-mode\"><strong>Mode:</strong> {gameMode}</span>\n              <span className=\"match-time\" title={formattedCreatedAt}><strong>Played:</strong> {relativeTime}</span>\n              <span className=\"match-duration\"><strong>Duration:</strong> {formatMatchDuration(matchDuration)}</span>\n            </div>\n          </div>\n        </div>\n        \n        {/* Tabs for different views */}\n        <div className=\"match-tabs\">\n          <button \n            className={`tab-btn ${activeTab === 'overview' ? 'active' : ''}`}\n            onClick={() => handleTabChange('overview')}\n          >\n            Overview\n          </button>\n          <button \n            className={`tab-btn ${activeTab === 'heatmap' ? 'active' : ''}`}\n            onClick={() => handleTabChange('heatmap')}\n          >\n            Heatmap\n          </button>\n          <button \n            className={`tab-btn ${activeTab === 'timeline' ? 'active' : ''}`}\n            onClick={() => handleTabChange('timeline')}\n          >\n            Timeline\n          </button>\n          <button \n            className={`tab-btn ${activeTab === 'players' ? 'active' : ''}`}\n            onClick={() => handleTabChange('players')}\n          >\n            Player Stats\n          </button>\n          <button \n            className={`tab-btn ${activeTab === 'live' ? 'active' : ''}`}\n            onClick={() => handleTabChange('live')}\n          >\n            Live Feed\n          </button>\n        </div>\n        \n        {/* Tab content */}\n        <div className=\"tab-content\">\n          {/* Overview tab */}\n          {activeTab === 'overview' && (\n            <div className=\"overview-tab\">\n              <div className=\"match-overview\">\n                <div className=\"teams-overview\">\n                  <h2>Teams & Placement</h2>\n                  <div className=\"teams-grid\">\n                    {rosters\n                      .filter(roster => roster?.attributes?.stats?.rank) // Filter out any invalid rosters\n                      .sort((a, b) => (a.attributes?.stats?.rank || 999) - (b.attributes?.stats?.rank || 999))\n                      .map(roster => {\n                        const teamRank = roster.attributes?.stats?.rank || 999;\n                        const teamId = roster.id;\n                        const won = roster.attributes?.won === 'true';\n                        const playerIds = roster.relationships?.participants?.data?.map(p => p.id) || [];\n                        const teamPlayers = participants.filter(p => playerIds.includes(p.id));\n                        \n                        return (\n                          <div key={teamId} className={`team-card rank-${teamRank} ${won ? 'winner' : ''}`}>\n                            <div className=\"team-header\">\n                              <div className=\"team-rank\">#{teamRank}{won && ' 🏆'}</div>\n                              <div className=\"team-stats\">\n                                <div className=\"team-kills\">\n                                  {teamPlayers.reduce((sum, p) => sum + (p.attributes?.stats?.kills || 0), 0)} kills\n                                </div>\n                                <div className=\"team-damage\">\n                                  {Math.round(teamPlayers.reduce((sum, p) => sum + (p.attributes?.stats?.damageDealt || 0), 0))} damage\n                                </div>\n                              </div>\n                            </div>\n                            <div className=\"team-players\">\n                              {teamPlayers.map(player => (\n                                <div key={player.id} className=\"player-row\">\n                                  <div className=\"player-name\">\n                                    {player.attributes?.stats?.name || 'Unknown Player'}\n                                    {player.attributes?.stats?.deathType === 'alive' && ' 🔄'}\n                                  </div>\n                                  <div className=\"player-stats\">\n                                    <span className=\"kills\" title=\"Kills\">{player.attributes?.stats?.kills || 0}</span>\n                                    <span className=\"assists\" title=\"Assists\">{player.attributes?.stats?.assists || 0}</span>\n                                    <span className=\"damage\" title=\"Damage\">{Math.round(player.attributes?.stats?.damageDealt || 0)}</span>\n                                    {player.attributes?.stats?.headshotKills > 0 && \n                                      <span className=\"headshots\" title=\"Headshot Kills\">🎯 {player.attributes?.stats?.headshotKills}</span>\n                                    }\n                                  </div>\n                                </div>\n                              ))}\n                            </div>\n                          </div>\n                        );\n                      })}\n                  </div>\n                </div>\n                \n                <div className=\"match-stats-summary\">\n                  <h2>Match Summary</h2>\n                  <div className=\"summary-stats\">\n                    <div className=\"summary-stat\">\n                      <div className=\"stat-label\">Total Players</div>\n                      <div className=\"stat-value\">{participants.length || 0}</div>\n                    </div>\n                    <div className=\"summary-stat\">\n                      <div className=\"stat-label\">Total Teams</div>\n                      <div className=\"stat-value\">{rosters.length || 0}</div>\n                    </div>\n                    <div className=\"summary-stat\">\n                      <div className=\"stat-label\">Total Kills</div>\n                      <div className=\"stat-value\">\n                        {participants.reduce((sum, p) => sum + (p.attributes?.stats?.kills || 0), 0)}\n                      </div>\n                    </div>\n                    <div className=\"summary-stat\">\n                      <div className=\"stat-label\">Avg. Kills/Player</div>\n                      <div className=\"stat-value\">\n                        {participants.length > 0 ? (participants.reduce((sum, p) => sum + (p.attributes?.stats?.kills || 0), 0) / participants.length).toFixed(1) : '0.0'}\n                      </div>\n                    </div>\n                    <div className=\"summary-stat\">\n                      <div className=\"stat-label\">Longest Kill</div>\n                      <div className=\"stat-value\">\n                        {Math.max(...participants.map(p => p.attributes?.stats?.longestKill || 0)).toFixed(1)}m\n                      </div>\n                    </div>\n                    <div className=\"summary-stat\">\n                      <div className=\"stat-label\">Headshot Kills</div>\n                      <div className=\"stat-value\">\n                        {participants.reduce((sum, p) => sum + (p.attributes?.stats?.headshotKills || 0), 0)}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"data-source-info\">\n                    <p>\n                      {refreshing ? 'Refreshing data...' : \n                       'Data may be cached to avoid rate limits. Click \"Refresh\" for the latest data.'}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n          \n          {/* Heatmap tab */}\n          {activeTab === 'heatmap' && (\n            <div className=\"heatmap-tab\">\n              <div className=\"heatmap-controls\">\n                <label>Heatmap Type:</label>\n                <select\n                  value={heatmapType}\n                  onChange={(e) => handleHeatmapTypeChange(e.target.value)}\n                >\n                  <option value=\"positions\">Player Positions</option>\n                  <option value=\"kills\">Kill Locations</option>\n                  <option value=\"deaths\">Death Locations</option>\n                  <option value=\"damage\">Damage Locations</option>\n                  <option value=\"drops\">Hot Drop Areas</option>\n                </select>\n              </div>\n              <MatchHeatmap matchId={matchId} type={heatmapType} />\n            </div>\n          )}\n          \n          {/* Timeline tab */}\n          {activeTab === 'timeline' && (\n            <div className=\"timeline-tab\">\n              <MatchTimeline matchId={matchId} />\n            </div>\n          )}\n          \n          {/* Player Stats tab */}\n          {activeTab === 'players' && (\n            <div className=\"players-tab\">\n              <div className=\"player-selector\">\n                <label htmlFor=\"player-select\">Select Player:</label>\n                <select\n                  id=\"player-select\"\n                  value={selectedPlayer || ''}\n                  onChange={(e) => setSelectedPlayer(e.target.value)}\n                >\n                  <option value=\"\">Select a player</option>\n                  {participants\n                    .filter(player => player.attributes?.stats?.name) // Only show players with valid names\n                    .sort((a, b) => (a.attributes?.stats?.name || '').localeCompare(b.attributes?.stats?.name || ''))\n                    .map(player => (\n                      <option key={player.id} value={player.attributes?.stats?.playerId || ''}>\n                        {player.attributes?.stats?.name || 'Unknown Player'} \n                        ({player.attributes?.stats?.kills || 0} kills)\n                      </option>\n                    ))\n                  }\n                </select>\n              </div>\n              \n              {selectedPlayer ? (\n                <PlayerPerformance matchId={matchId} accountId={selectedPlayer} />\n              ) : (\n                <div className=\"no-player-selected\">\n                  Please select a player to view detailed statistics\n                </div>\n              )}\n            </div>\n          )}\n          \n          {/* Live Feed tab */}\n          {activeTab === 'live' && (\n            <div className=\"live-tab\">\n              <LiveMatchFeed matchId={matchId} initialMatchData={match} />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MatchDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}