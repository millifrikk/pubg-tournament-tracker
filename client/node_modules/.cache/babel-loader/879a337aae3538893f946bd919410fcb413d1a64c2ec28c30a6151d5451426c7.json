{"ast":null,"code":"import React,{useState,useEffect,useCallback,useRef}from'react';import{useParams,Link,useLocation,useNavigate}from'react-router-dom';import axios from'axios';import tournamentService from'../../services/tournamentService';import{useSocket}from'../../contexts/SocketContext';import LoadingSpinner from'../../components/common/LoadingSpinner';import TournamentLeaderboard from'../../components/tournaments/TournamentLeaderboard';import Modal from'../../components/common/Modal';import AddTeamToTournament from'../../components/common/AddTeamToTournament';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TournamentDetails=()=>{var _tournament$teams,_tournament$matches2,_tournament$matches3;const{id:tournamentId}=useParams();const location=useLocation();const navigate=useNavigate();const[tournament,setTournament]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const[activeTab,setActiveTab]=useState('overview');const[calculatingStandings,setCalculatingStandings]=useState(false);const[isAddTeamModalOpen,setIsAddTeamModalOpen]=useState(false);const{joinMatch,leaveMatch,subscribeToEvent,emitEvent}=useSocket();const[realTimeUpdates,setRealTimeUpdates]=useState([]);// Create wrapper functions for joinMatch and leaveMatch using useCallback to prevent rerenders\nconst joinTournament=useCallback(tournamentId=>{console.log('Joining tournament room:',tournamentId);if(joinMatch){joinMatch(`tournament:${tournamentId}`);}},[joinMatch]);const leaveTournament=useCallback(tournamentId=>{console.log('Leaving tournament room:',tournamentId);if(leaveMatch){leaveMatch(`tournament:${tournamentId}`);}},[leaveMatch]);// Create wrapper for subscribeTournamentUpdates\nconst subscribeTournamentUpdates=useCallback(callback=>{console.log('Setting up tournament updates subscription');return subscribeToEvent('tournament-update',callback);},[subscribeToEvent]);// Use ref to track if we've already fetched the data to prevent duplicate requests\nconst dataFetchedRef=useRef(false);// Use a ref to track if we're already fetching data to prevent duplicate requests\nconst fetchingRef=useRef(false);// Use a debounced fetch function to prevent rapid consecutive calls\nconst fetchTournamentData=useCallback(async()=>{// Return early if already fetching or lacking a tournament ID\nif(fetchingRef.current||!tournamentId){console.log('Skipping redundant fetch, already in progress or missing ID');return;}try{var _response$data;// Mark that we're fetching to prevent duplicate requests\nfetchingRef.current=true;setLoading(true);console.log(`Fetching tournament data for ID: ${tournamentId}`);const response=await tournamentService.getTournamentById(tournamentId);// Log the entire response for debugging\nconsole.log(`Raw response:`,response);// Check for different response structures and handle accordingly\nlet tournamentData=null;// Case 1: Standard format - response.data.data\nif(response!==null&&response!==void 0&&(_response$data=response.data)!==null&&_response$data!==void 0&&_response$data.data){tournamentData=response.data.data;}// Case 2: Simplified format - response.data\nelse if(response!==null&&response!==void 0&&response.data&&!response.data.data){tournamentData=response.data;}// Case 3: Direct data format\nelse if(response&&!response.data){tournamentData=response;}if(tournamentData){console.log('Tournament data successfully loaded:',tournamentData.name||'unnamed');setTournament(tournamentData);setError(null);}else{console.error('Could not extract tournament data from response. Format not recognized:',response);setError('Failed to load tournament data - response format not recognized');}}catch(err){console.error('Error fetching tournament data:',err);setError('Failed to load tournament data');// If we get a 429 error, don't try again immediately\nif(err.response&&err.response.status===429){console.warn('Rate limit exceeded. Waiting before retrying...');}}finally{setLoading(false);// Reset fetching flag after a small delay to prevent immediate re-fetch\nsetTimeout(()=>{fetchingRef.current=false;},500);}},[tournamentId]);useEffect(()=>{// Fetch tournament data once when component mounts\nif(!dataFetchedRef.current){dataFetchedRef.current=true;fetchTournamentData();}// Join tournament room for real-time updates\njoinTournament(tournamentId);// Subscribe to tournament updates\nconst unsubscribe=subscribeTournamentUpdates(data=>{if(data.tournamentId===tournamentId){// Add update to the feed\nsetRealTimeUpdates(prev=>[{id:Date.now(),type:data.type,timestamp:new Date(data.timestamp||Date.now()),content:data},...prev.slice(0,19)// Keep only the 20 most recent updates\n]);// Also update local tournament data if needed\nif(data.type==='MATCHES_ADDED'){setTournament(prev=>{if(!prev)return prev;return{...prev,matches:data.matches};});}}});// Clean up when unmounting\nreturn()=>{leaveTournament(tournamentId);unsubscribe();};},[tournamentId,joinTournament,leaveTournament,subscribeTournamentUpdates]);// Function to retry fetching data (useful if tournament data could not be loaded initially)\nconst retryFetchData=useCallback(()=>{console.log('Retrying tournament data fetch...');// Clear fetchingRef to allow a new attempt\nfetchingRef.current=false;// Clear data fetched flag\ndataFetchedRef.current=false;// Clear any cached data for this tournament\ntry{tournamentService.clearCache(`tournament_${tournamentId}`);}catch(err){console.error('Error clearing cache:',err);}// Try fetching again\nfetchTournamentData();},[tournamentId,fetchTournamentData]);// Handle tab change\nconst handleTabChange=tab=>{setActiveTab(tab);// Update URL without full refresh\nconst params=new URLSearchParams(location.search);params.set('tab',tab);navigate(`${location.pathname}?${params.toString()}`,{replace:true});};// Handle calculate standings\nconst handleCalculateStandings=async()=>{var _tournament$matches;if(calculatingStandings||((_tournament$matches=tournament.matches)===null||_tournament$matches===void 0?void 0:_tournament$matches.length)===0)return;setCalculatingStandings(true);try{const response=await axios.post(`/api/tournaments/${tournamentId}/calculate-standings`,{platform:'steam'// Default platform\n});// Update tournament with new standings\nsetTournament(prev=>({...prev,standings:JSON.stringify(response.data.data.standings)}));// Add update to feed\nsetRealTimeUpdates(prev=>[{id:Date.now(),type:'STANDINGS_UPDATE',timestamp:new Date(),content:{tournamentId}},...prev.slice(0,19)]);}catch(err){console.error('Error calculating standings:',err);setError('Failed to calculate standings. Please try again.');}finally{setCalculatingStandings(false);}};// Handle export standings\nconst handleExportStandings=()=>{if(!tournament.standings)return;try{// Parse standings\nconst standings=JSON.parse(tournament.standings);// Create CSV content\nlet csvContent='Rank,Team,Points,Kills,Damage,Avg Placement\\n';standings.forEach(team=>{csvContent+=`${team.rank},${team.teamName},${team.totalPoints},${team.totalKills},${Math.round(team.totalDamage)},${team.averagePlacement.toFixed(1)}\\n`;});// Create blob and download\nconst blob=new Blob([csvContent],{type:'text/csv;charset=utf-8;'});const url=URL.createObjectURL(blob);const link=document.createElement('a');link.setAttribute('href',url);link.setAttribute('download',`${tournament.name.replace(/\\s+/g,'_')}_standings.csv`);link.style.visibility='hidden';document.body.appendChild(link);link.click();document.body.removeChild(link);}catch(err){console.error('Error exporting standings:',err);setError('Failed to export standings');}};if(loading){return/*#__PURE__*/_jsx(\"div\",{className:\"tournament-details-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"page-title\",children:\"Tournament Details\"}),/*#__PURE__*/_jsx(LoadingSpinner,{})]})});}if(error){return/*#__PURE__*/_jsx(\"div\",{className:\"tournament-details-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"page-title\",children:\"Tournament Details\"}),/*#__PURE__*/_jsx(\"div\",{className:\"error-container\",children:error})]})});}if(!tournament){return/*#__PURE__*/_jsx(\"div\",{className:\"tournament-details-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"page-title\",children:\"Tournament Details\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"error-container\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Tournament not found or could not be loaded\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary mt-3\",onClick:retryFetchData,children:\"Retry Loading Tournament\"})]})]})});}// Format dates\nconst formatDate=dateString=>{const options={year:'numeric',month:'long',day:'numeric',hour:'2-digit',minute:'2-digit'};return new Date(dateString).toLocaleDateString(undefined,options);};return/*#__PURE__*/_jsx(\"div\",{className:\"tournament-details-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tournament-header\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"page-title\",children:tournament.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"tournament-meta\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"tournament-dates\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"date-label\",children:\"Start:\"}),\" \",formatDate(tournament.start_date),/*#__PURE__*/_jsx(\"span\",{className:\"date-label\",children:\" End:\"}),\" \",formatDate(tournament.end_date)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tournament-format\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"format-label\",children:\"Format:\"}),\" \",tournament.format,/*#__PURE__*/_jsx(\"span\",{className:\"scoring-label\",children:\" Scoring:\"}),\" \",tournament.scoring_system]}),tournament.is_active&&/*#__PURE__*/_jsx(\"div\",{className:\"status-active\",children:\"Active\"})]})]}),tournament.description&&/*#__PURE__*/_jsx(\"div\",{className:\"tournament-description\",children:tournament.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"tournament-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{className:`tab-btn ${activeTab==='overview'?'active':''}`,onClick:()=>handleTabChange('overview'),children:\"Overview\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab-btn ${activeTab==='standings'?'active':''}`,onClick:()=>handleTabChange('standings'),children:\"Standings\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab-btn ${activeTab==='matches'?'active':''}`,onClick:()=>handleTabChange('matches'),children:\"Matches\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab-btn ${activeTab==='teams'?'active':''}`,onClick:()=>handleTabChange('teams'),children:\"Teams\"}),/*#__PURE__*/_jsx(\"button\",{className:`tab-btn ${activeTab==='updates'?'active':''}`,onClick:()=>handleTabChange('updates'),children:\"Live Updates\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tab-content\",children:[activeTab==='overview'&&/*#__PURE__*/_jsx(\"div\",{className:\"overview-tab\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tournament-overview\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"overview-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Tournament Summary\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stats\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stat\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Teams\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:((_tournament$teams=tournament.teams)===null||_tournament$teams===void 0?void 0:_tournament$teams.length)||0})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stat\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Matches\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:((_tournament$matches2=tournament.matches)===null||_tournament$matches2===void 0?void 0:_tournament$matches2.length)||0})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stat\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Status\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:tournament.is_active?'Active':'Completed'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-stat\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-label\",children:\"Visibility\"}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-value\",children:tournament.is_public?'Public':'Private'})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"overview-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Next Match\"}),tournament.matches&&tournament.matches.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"next-match-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-number\",children:[\"Match #\",tournament.matches[0].match_number]}),/*#__PURE__*/_jsx(\"div\",{className:\"match-id\",children:tournament.matches[0].match_id}),/*#__PURE__*/_jsx(\"div\",{className:\"match-status\",children:tournament.matches[0].verified?'Verified':'Pending'}),/*#__PURE__*/_jsx(Link,{to:`/matches/${tournament.matches[0].match_id}`,className:\"view-match-btn\",children:\"View Match\"})]}):/*#__PURE__*/_jsx(\"div\",{className:\"no-matches\",children:\"No matches scheduled yet\"})]}),tournament.standings&&/*#__PURE__*/_jsxs(\"div\",{className:\"overview-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Current Standings\"}),/*#__PURE__*/_jsx(\"div\",{className:\"top-teams\",children:JSON.parse(tournament.standings).slice(0,3).map((team,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`top-team rank-${index+1}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"team-rank\",children:[\"#\",team.rank]}),/*#__PURE__*/_jsx(\"div\",{className:\"team-name\",children:team.teamName}),/*#__PURE__*/_jsxs(\"div\",{className:\"team-points\",children:[team.totalPoints,\" pts\"]})]},team.teamId))}),/*#__PURE__*/_jsx(Link,{to:\"#\",onClick:()=>handleTabChange('standings'),className:\"view-all-link\",children:\"View full standings\"})]})]})}),activeTab==='standings'&&/*#__PURE__*/_jsxs(\"div\",{className:\"standings-tab\",children:[/*#__PURE__*/_jsx(TournamentLeaderboard,{tournamentId:tournamentId}),/*#__PURE__*/_jsxs(\"div\",{className:\"standings-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"calculate-btn btn-primary\",onClick:handleCalculateStandings,disabled:calculatingStandings||((_tournament$matches3=tournament.matches)===null||_tournament$matches3===void 0?void 0:_tournament$matches3.length)===0,children:calculatingStandings?'Calculating...':'Recalculate Standings'}),/*#__PURE__*/_jsx(\"button\",{className:\"export-btn btn-secondary\",onClick:handleExportStandings,disabled:!tournament.standings,children:\"Export to CSV\"})]})]}),activeTab==='matches'&&/*#__PURE__*/_jsxs(\"div\",{className:\"matches-tab\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"matches-actions\",children:/*#__PURE__*/_jsx(Link,{to:`/matches/search?tournamentId=${tournamentId}`,className:\"add-matches-btn\",children:\"Add Matches\"})}),tournament.matches&&tournament.matches.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"matches-list\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Tournament Matches\"}),/*#__PURE__*/_jsx(\"div\",{className:\"matches-grid\",children:tournament.matches.sort((a,b)=>a.match_number-b.match_number).map(match=>/*#__PURE__*/_jsxs(\"div\",{className:\"match-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-number\",children:[\"Match #\",match.match_number]}),/*#__PURE__*/_jsx(\"div\",{className:\"match-stage\",children:match.stage})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-body\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-id\",children:[\"ID: \",match.match_id]}),/*#__PURE__*/_jsx(\"div\",{className:\"match-status\",children:match.verified?'Verified':'Pending'}),/*#__PURE__*/_jsx(\"div\",{className:\"match-date\",children:new Date(match.registered_at).toLocaleDateString()})]}),/*#__PURE__*/_jsx(\"div\",{className:\"match-actions\",children:/*#__PURE__*/_jsx(Link,{to:`/matches/${match.match_id}`,className:\"view-match-btn\",children:\"View Match\"})})]},match.id))})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"no-matches\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"No matches have been added to this tournament yet.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Use the \\\"Add Matches\\\" button to search for and add custom matches.\"})]})]}),activeTab==='teams'&&/*#__PURE__*/_jsxs(\"div\",{className:\"teams-tab\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"teams-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"add-team-btn btn-primary\",onClick:()=>setIsAddTeamModalOpen(true),children:\"Add Team\"})}),/*#__PURE__*/_jsx(Modal,{isOpen:isAddTeamModalOpen,onClose:()=>setIsAddTeamModalOpen(false),children:/*#__PURE__*/_jsx(AddTeamToTournament,{tournamentId:tournamentId,onSuccess:()=>{setIsAddTeamModalOpen(false);// Refresh tournament data using service\nconst refreshTournamentData=async()=>{try{console.log('Refreshing tournament data after adding team');// Clear cache to ensure fresh data\ntournamentService.clearCache(`tournament_${tournamentId}`);const response=await tournamentService.getTournamentById(tournamentId);setTournament(response.data.data);console.log('Tournament data refreshed:',response.data.data);}catch(err){console.error('Error refreshing tournament data:',err);}};refreshTournamentData();// Add update to feed\nsetRealTimeUpdates(prev=>[{id:Date.now(),type:'TEAMS_ADDED',timestamp:new Date(),content:{tournamentId}},...prev.slice(0,19)]);},onCancel:()=>setIsAddTeamModalOpen(false)})}),tournament.teams&&tournament.teams.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"teams-list\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Participating Teams\"}),/*#__PURE__*/_jsx(\"div\",{className:\"teams-grid\",children:tournament.teams.map(team=>/*#__PURE__*/_jsxs(\"div\",{className:\"team-card\",children:[team.logo_url&&/*#__PURE__*/_jsx(\"div\",{className:\"team-logo\",children:/*#__PURE__*/_jsx(\"img\",{src:team.logo_url,alt:`${team.name} logo`})}),/*#__PURE__*/_jsxs(\"div\",{className:\"team-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"team-name\",children:[team.tag&&/*#__PURE__*/_jsxs(\"span\",{className:\"team-tag\",children:[\"[\",team.tag,\"]\"]}),team.name]}),/*#__PURE__*/_jsxs(\"div\",{className:\"team-seed\",children:[\"Seed: \",team.seed_number||'Unranked']}),/*#__PURE__*/_jsx(\"div\",{className:\"team-status\",children:team.is_active?'Active':'Inactive'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"team-actions\",children:/*#__PURE__*/_jsx(Link,{to:`/teams/${team.id}`,className:\"view-team-btn\",children:\"View Team\"})})]},team.id))})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"no-teams\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"No teams have been added to this tournament yet.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Use the \\\"Add Team\\\" button to register teams for this tournament.\"})]})]}),activeTab==='updates'&&/*#__PURE__*/_jsxs(\"div\",{className:\"updates-tab\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Live Tournament Updates\"}),/*#__PURE__*/_jsx(\"div\",{className:\"updates-container\",children:realTimeUpdates.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"updates-list\",children:realTimeUpdates.map(update=>/*#__PURE__*/_jsxs(\"div\",{className:`update-item update-${update.type.toLowerCase()}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"update-time\",children:update.timestamp.toLocaleTimeString()}),/*#__PURE__*/_jsx(\"div\",{className:\"update-content\",children:formatUpdateContent(update)})]},update.id))}):/*#__PURE__*/_jsxs(\"div\",{className:\"no-updates\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"No live updates yet.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Updates will appear here in real-time as tournament activity occurs.\"})]})})]})]})]})});};// Helper function to format update content\nconst formatUpdateContent=update=>{switch(update.type){case'MATCHES_ADDED':return`${update.content.added.length} new match(es) added to the tournament`;case'STANDINGS_UPDATE':return'Tournament standings have been updated';case'MATCH_COMPLETED':return`Match #${update.content.matchNumber||''} completed`;case'TEAM_JOINED':return`Team \"${update.content.teamName}\" joined the tournament`;default:return'Tournament update received';}};export default TournamentDetails;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","useParams","Link","useLocation","useNavigate","axios","tournamentService","useSocket","LoadingSpinner","TournamentLeaderboard","Modal","AddTeamToTournament","jsx","_jsx","jsxs","_jsxs","TournamentDetails","_tournament$teams","_tournament$matches2","_tournament$matches3","id","tournamentId","location","navigate","tournament","setTournament","loading","setLoading","error","setError","activeTab","setActiveTab","calculatingStandings","setCalculatingStandings","isAddTeamModalOpen","setIsAddTeamModalOpen","joinMatch","leaveMatch","subscribeToEvent","emitEvent","realTimeUpdates","setRealTimeUpdates","joinTournament","console","log","leaveTournament","subscribeTournamentUpdates","callback","dataFetchedRef","fetchingRef","fetchTournamentData","current","_response$data","response","getTournamentById","tournamentData","data","name","err","status","warn","setTimeout","unsubscribe","prev","Date","now","type","timestamp","content","slice","matches","retryFetchData","clearCache","handleTabChange","tab","params","URLSearchParams","search","set","pathname","toString","replace","handleCalculateStandings","_tournament$matches","length","post","platform","standings","JSON","stringify","handleExportStandings","parse","csvContent","forEach","team","rank","teamName","totalPoints","totalKills","Math","round","totalDamage","averagePlacement","toFixed","blob","Blob","url","URL","createObjectURL","link","document","createElement","setAttribute","style","visibility","body","appendChild","click","removeChild","className","children","onClick","formatDate","dateString","options","year","month","day","hour","minute","toLocaleDateString","undefined","start_date","end_date","format","scoring_system","is_active","description","teams","is_public","match_number","match_id","verified","to","map","index","teamId","disabled","sort","a","b","match","stage","registered_at","isOpen","onClose","onSuccess","refreshTournamentData","onCancel","logo_url","src","alt","tag","seed_number","update","toLowerCase","toLocaleTimeString","formatUpdateContent","added","matchNumber"],"sources":["C:/Users/emil/OneDrive/Documents/development/apiDevelopment/pubg-tournament-tracker/client/src/pages/tournaments/TournamentDetails.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { useParams, Link, useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport tournamentService from '../../services/tournamentService';\nimport { useSocket } from '../../contexts/SocketContext';\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\nimport TournamentLeaderboard from '../../components/tournaments/TournamentLeaderboard';\nimport Modal from '../../components/common/Modal';\nimport AddTeamToTournament from '../../components/common/AddTeamToTournament';\n\nconst TournamentDetails = () => {\n  const { id: tournamentId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [tournament, setTournament] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeTab, setActiveTab] = useState('overview');\n  const [calculatingStandings, setCalculatingStandings] = useState(false);\n  const [isAddTeamModalOpen, setIsAddTeamModalOpen] = useState(false);\n  const { joinMatch, leaveMatch, subscribeToEvent, emitEvent } = useSocket();\n  const [realTimeUpdates, setRealTimeUpdates] = useState([]);\n  \n  // Create wrapper functions for joinMatch and leaveMatch using useCallback to prevent rerenders\n  const joinTournament = useCallback((tournamentId) => {\n    console.log('Joining tournament room:', tournamentId);\n    if (joinMatch) {\n      joinMatch(`tournament:${tournamentId}`);\n    }\n  }, [joinMatch]);\n  \n  const leaveTournament = useCallback((tournamentId) => {\n    console.log('Leaving tournament room:', tournamentId);\n    if (leaveMatch) {\n      leaveMatch(`tournament:${tournamentId}`);\n    }\n  }, [leaveMatch]);\n  \n  // Create wrapper for subscribeTournamentUpdates\n  const subscribeTournamentUpdates = useCallback((callback) => {\n    console.log('Setting up tournament updates subscription');\n    return subscribeToEvent('tournament-update', callback);\n  }, [subscribeToEvent]);\n  \n  // Use ref to track if we've already fetched the data to prevent duplicate requests\n  const dataFetchedRef = useRef(false);\n  \n  // Use a ref to track if we're already fetching data to prevent duplicate requests\n  const fetchingRef = useRef(false);\n  \n  // Use a debounced fetch function to prevent rapid consecutive calls\n  const fetchTournamentData = useCallback(async () => {\n    // Return early if already fetching or lacking a tournament ID\n    if (fetchingRef.current || !tournamentId) {\n      console.log('Skipping redundant fetch, already in progress or missing ID');\n      return;\n    }\n    \n    try {\n      // Mark that we're fetching to prevent duplicate requests\n      fetchingRef.current = true;\n      setLoading(true);\n      \n      console.log(`Fetching tournament data for ID: ${tournamentId}`);\n      const response = await tournamentService.getTournamentById(tournamentId);\n      // Log the entire response for debugging\n      console.log(`Raw response:`, response);\n      \n      // Check for different response structures and handle accordingly\n      let tournamentData = null;\n      \n      // Case 1: Standard format - response.data.data\n      if (response?.data?.data) {\n        tournamentData = response.data.data;\n      }\n      // Case 2: Simplified format - response.data\n      else if (response?.data && !response.data.data) {\n        tournamentData = response.data;\n      }\n      // Case 3: Direct data format\n      else if (response && !response.data) {\n        tournamentData = response;\n      }\n      \n      if (tournamentData) {\n        console.log('Tournament data successfully loaded:', tournamentData.name || 'unnamed');\n        setTournament(tournamentData);\n        setError(null);\n      } else {\n        console.error('Could not extract tournament data from response. Format not recognized:', response);\n        setError('Failed to load tournament data - response format not recognized');\n      }\n    } catch (err) {\n      console.error('Error fetching tournament data:', err);\n      setError('Failed to load tournament data');\n      \n      // If we get a 429 error, don't try again immediately\n      if (err.response && err.response.status === 429) {\n        console.warn('Rate limit exceeded. Waiting before retrying...');\n      }\n    } finally {\n      setLoading(false);\n      // Reset fetching flag after a small delay to prevent immediate re-fetch\n      setTimeout(() => {\n        fetchingRef.current = false;\n      }, 500);\n    }\n  }, [tournamentId]);\n  \n  useEffect(() => {\n    // Fetch tournament data once when component mounts\n    if (!dataFetchedRef.current) {\n      dataFetchedRef.current = true;\n      fetchTournamentData();\n    }\n    \n    // Join tournament room for real-time updates\n    joinTournament(tournamentId);\n    \n    // Subscribe to tournament updates\n    const unsubscribe = subscribeTournamentUpdates((data) => {\n      if (data.tournamentId === tournamentId) {\n        // Add update to the feed\n        setRealTimeUpdates(prev => [\n          {\n            id: Date.now(),\n            type: data.type,\n            timestamp: new Date(data.timestamp || Date.now()),\n            content: data\n          },\n          ...prev.slice(0, 19) // Keep only the 20 most recent updates\n        ]);\n        \n        // Also update local tournament data if needed\n        if (data.type === 'MATCHES_ADDED') {\n          setTournament(prev => {\n            if (!prev) return prev;\n            return {\n              ...prev,\n              matches: data.matches\n            };\n          });\n        }\n      }\n    });\n    \n    // Clean up when unmounting\n    return () => {\n      leaveTournament(tournamentId);\n      unsubscribe();\n    };\n  }, [tournamentId, joinTournament, leaveTournament, subscribeTournamentUpdates]);\n  \n  // Function to retry fetching data (useful if tournament data could not be loaded initially)\n  const retryFetchData = useCallback(() => {\n    console.log('Retrying tournament data fetch...');\n    // Clear fetchingRef to allow a new attempt\n    fetchingRef.current = false;\n    // Clear data fetched flag\n    dataFetchedRef.current = false;\n    // Clear any cached data for this tournament\n    try {\n      tournamentService.clearCache(`tournament_${tournamentId}`);\n    } catch (err) {\n      console.error('Error clearing cache:', err);\n    }\n    // Try fetching again\n    fetchTournamentData();\n  }, [tournamentId, fetchTournamentData]);\n  \n  // Handle tab change\n  const handleTabChange = (tab) => {\n    setActiveTab(tab);\n    \n    // Update URL without full refresh\n    const params = new URLSearchParams(location.search);\n    params.set('tab', tab);\n    navigate(`${location.pathname}?${params.toString()}`, { replace: true });\n  };\n  \n  // Handle calculate standings\n  const handleCalculateStandings = async () => {\n    if (calculatingStandings || tournament.matches?.length === 0) return;\n    \n    setCalculatingStandings(true);\n    \n    try {\n      const response = await axios.post(`/api/tournaments/${tournamentId}/calculate-standings`, {\n        platform: 'steam' // Default platform\n      });\n      \n      // Update tournament with new standings\n      setTournament(prev => ({\n        ...prev,\n        standings: JSON.stringify(response.data.data.standings)\n      }));\n      \n      // Add update to feed\n      setRealTimeUpdates(prev => [\n        {\n          id: Date.now(),\n          type: 'STANDINGS_UPDATE',\n          timestamp: new Date(),\n          content: { tournamentId }\n        },\n        ...prev.slice(0, 19)\n      ]);\n      \n    } catch (err) {\n      console.error('Error calculating standings:', err);\n      setError('Failed to calculate standings. Please try again.');\n    } finally {\n      setCalculatingStandings(false);\n    }\n  };\n  \n  // Handle export standings\n  const handleExportStandings = () => {\n    if (!tournament.standings) return;\n    \n    try {\n      // Parse standings\n      const standings = JSON.parse(tournament.standings);\n      \n      // Create CSV content\n      let csvContent = 'Rank,Team,Points,Kills,Damage,Avg Placement\\n';\n      \n      standings.forEach(team => {\n        csvContent += `${team.rank},${team.teamName},${team.totalPoints},${team.totalKills},${Math.round(team.totalDamage)},${team.averagePlacement.toFixed(1)}\\n`;\n      });\n      \n      // Create blob and download\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.setAttribute('href', url);\n      link.setAttribute('download', `${tournament.name.replace(/\\s+/g, '_')}_standings.csv`);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    } catch (err) {\n      console.error('Error exporting standings:', err);\n      setError('Failed to export standings');\n    }\n  };\n  \n  if (loading) {\n    return (\n      <div className=\"tournament-details-page\">\n        <div className=\"container\">\n          <h1 className=\"page-title\">Tournament Details</h1>\n          <LoadingSpinner />\n        </div>\n      </div>\n    );\n  }\n  \n  if (error) {\n    return (\n      <div className=\"tournament-details-page\">\n        <div className=\"container\">\n          <h1 className=\"page-title\">Tournament Details</h1>\n          <div className=\"error-container\">{error}</div>\n        </div>\n      </div>\n    );\n  }\n  \n  if (!tournament) {\n    return (\n      <div className=\"tournament-details-page\">\n        <div className=\"container\">\n          <h1 className=\"page-title\">Tournament Details</h1>\n          <div className=\"error-container\">\n            <p>Tournament not found or could not be loaded</p>\n            <button \n              className=\"btn btn-primary mt-3\"\n              onClick={retryFetchData}\n            >\n              Retry Loading Tournament\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  // Format dates\n  const formatDate = (dateString) => {\n    const options = { year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  \n  return (\n    <div className=\"tournament-details-page\">\n      <div className=\"container\">\n        <div className=\"tournament-header\">\n          <h1 className=\"page-title\">{tournament.name}</h1>\n          <div className=\"tournament-meta\">\n            <div className=\"tournament-dates\">\n              <span className=\"date-label\">Start:</span> {formatDate(tournament.start_date)}\n              <span className=\"date-label\"> End:</span> {formatDate(tournament.end_date)}\n            </div>\n            <div className=\"tournament-format\">\n              <span className=\"format-label\">Format:</span> {tournament.format}\n              <span className=\"scoring-label\"> Scoring:</span> {tournament.scoring_system}\n            </div>\n            {tournament.is_active && <div className=\"status-active\">Active</div>}\n          </div>\n        </div>\n        \n        {tournament.description && (\n          <div className=\"tournament-description\">\n            {tournament.description}\n          </div>\n        )}\n        \n        {/* Tabs for different views */}\n        <div className=\"tournament-tabs\">\n          <button \n            className={`tab-btn ${activeTab === 'overview' ? 'active' : ''}`}\n            onClick={() => handleTabChange('overview')}\n          >\n            Overview\n          </button>\n          <button \n            className={`tab-btn ${activeTab === 'standings' ? 'active' : ''}`}\n            onClick={() => handleTabChange('standings')}\n          >\n            Standings\n          </button>\n          <button \n            className={`tab-btn ${activeTab === 'matches' ? 'active' : ''}`}\n            onClick={() => handleTabChange('matches')}\n          >\n            Matches\n          </button>\n          <button \n            className={`tab-btn ${activeTab === 'teams' ? 'active' : ''}`}\n            onClick={() => handleTabChange('teams')}\n          >\n            Teams\n          </button>\n          <button \n            className={`tab-btn ${activeTab === 'updates' ? 'active' : ''}`}\n            onClick={() => handleTabChange('updates')}\n          >\n            Live Updates\n          </button>\n        </div>\n        \n        {/* Tab content */}\n        <div className=\"tab-content\">\n          {/* Overview tab */}\n          {activeTab === 'overview' && (\n            <div className=\"overview-tab\">\n              <div className=\"tournament-overview\">\n                <div className=\"overview-section\">\n                  <h2>Tournament Summary</h2>\n                  <div className=\"summary-stats\">\n                    <div className=\"summary-stat\">\n                      <div className=\"stat-label\">Teams</div>\n                      <div className=\"stat-value\">{tournament.teams?.length || 0}</div>\n                    </div>\n                    <div className=\"summary-stat\">\n                      <div className=\"stat-label\">Matches</div>\n                      <div className=\"stat-value\">{tournament.matches?.length || 0}</div>\n                    </div>\n                    <div className=\"summary-stat\">\n                      <div className=\"stat-label\">Status</div>\n                      <div className=\"stat-value\">{tournament.is_active ? 'Active' : 'Completed'}</div>\n                    </div>\n                    <div className=\"summary-stat\">\n                      <div className=\"stat-label\">Visibility</div>\n                      <div className=\"stat-value\">{tournament.is_public ? 'Public' : 'Private'}</div>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"overview-section\">\n                  <h2>Next Match</h2>\n                  {tournament.matches && tournament.matches.length > 0 ? (\n                    <div className=\"next-match-card\">\n                      <div className=\"match-number\">Match #{tournament.matches[0].match_number}</div>\n                      <div className=\"match-id\">{tournament.matches[0].match_id}</div>\n                      <div className=\"match-status\">\n                        {tournament.matches[0].verified ? 'Verified' : 'Pending'}\n                      </div>\n                      <Link \n                        to={`/matches/${tournament.matches[0].match_id}`}\n                        className=\"view-match-btn\"\n                      >\n                        View Match\n                      </Link>\n                    </div>\n                  ) : (\n                    <div className=\"no-matches\">No matches scheduled yet</div>\n                  )}\n                </div>\n                \n                {tournament.standings && (\n                  <div className=\"overview-section\">\n                    <h2>Current Standings</h2>\n                    <div className=\"top-teams\">\n                      {JSON.parse(tournament.standings).slice(0, 3).map((team, index) => (\n                        <div key={team.teamId} className={`top-team rank-${index + 1}`}>\n                          <div className=\"team-rank\">#{team.rank}</div>\n                          <div className=\"team-name\">{team.teamName}</div>\n                          <div className=\"team-points\">{team.totalPoints} pts</div>\n                        </div>\n                      ))}\n                    </div>\n                    <Link \n                      to=\"#\" \n                      onClick={() => handleTabChange('standings')}\n                      className=\"view-all-link\"\n                    >\n                      View full standings\n                    </Link>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n          \n          {/* Standings tab */}\n          {activeTab === 'standings' && (\n            <div className=\"standings-tab\">\n              <TournamentLeaderboard tournamentId={tournamentId} />\n              \n              <div className=\"standings-actions\">\n                <button \n                  className=\"calculate-btn btn-primary\"\n                  onClick={handleCalculateStandings}\n                  disabled={calculatingStandings || tournament.matches?.length === 0}\n                >\n                  {calculatingStandings ? 'Calculating...' : 'Recalculate Standings'}\n                </button>\n                <button \n                  className=\"export-btn btn-secondary\"\n                  onClick={handleExportStandings}\n                  disabled={!tournament.standings}\n                >\n                  Export to CSV\n                </button>\n              </div>\n            </div>\n          )}\n          \n          {/* Matches tab */}\n          {activeTab === 'matches' && (\n            <div className=\"matches-tab\">\n              <div className=\"matches-actions\">\n                <Link to={`/matches/search?tournamentId=${tournamentId}`} className=\"add-matches-btn\">\n                  Add Matches\n                </Link>\n              </div>\n              \n              {tournament.matches && tournament.matches.length > 0 ? (\n                <div className=\"matches-list\">\n                  <h2>Tournament Matches</h2>\n                  <div className=\"matches-grid\">\n                    {tournament.matches\n                      .sort((a, b) => a.match_number - b.match_number)\n                      .map(match => (\n                        <div key={match.id} className=\"match-card\">\n                          <div className=\"match-header\">\n                            <div className=\"match-number\">Match #{match.match_number}</div>\n                            <div className=\"match-stage\">{match.stage}</div>\n                          </div>\n                          <div className=\"match-body\">\n                            <div className=\"match-id\">ID: {match.match_id}</div>\n                            <div className=\"match-status\">\n                              {match.verified ? 'Verified' : 'Pending'}\n                            </div>\n                            <div className=\"match-date\">\n                              {new Date(match.registered_at).toLocaleDateString()}\n                            </div>\n                          </div>\n                          <div className=\"match-actions\">\n                            <Link \n                              to={`/matches/${match.match_id}`}\n                              className=\"view-match-btn\"\n                            >\n                              View Match\n                            </Link>\n                          </div>\n                        </div>\n                      ))\n                    }\n                  </div>\n                </div>\n              ) : (\n                <div className=\"no-matches\">\n                  <p>No matches have been added to this tournament yet.</p>\n                  <p>Use the \"Add Matches\" button to search for and add custom matches.</p>\n                </div>\n              )}\n            </div>\n          )}\n          \n          {/* Teams tab */}\n          {activeTab === 'teams' && (\n            <div className=\"teams-tab\">\n              <div className=\"teams-actions\">\n                <button \n                  className=\"add-team-btn btn-primary\"\n                  onClick={() => setIsAddTeamModalOpen(true)}\n                >\n                  Add Team\n                </button>\n              </div>\n              \n              {/* Add Team Modal */}\n              <Modal \n                isOpen={isAddTeamModalOpen} \n                onClose={() => setIsAddTeamModalOpen(false)}\n              >\n                <AddTeamToTournament \n                  tournamentId={tournamentId}\n                  onSuccess={() => {\n                    setIsAddTeamModalOpen(false);\n                    // Refresh tournament data using service\n                    const refreshTournamentData = async () => {\n                      try {\n                        console.log('Refreshing tournament data after adding team');\n                        // Clear cache to ensure fresh data\n                        tournamentService.clearCache(`tournament_${tournamentId}`);\n                        const response = await tournamentService.getTournamentById(tournamentId);\n                        setTournament(response.data.data);\n                        console.log('Tournament data refreshed:', response.data.data);\n                      } catch (err) {\n                        console.error('Error refreshing tournament data:', err);\n                      }\n                    };\n                    refreshTournamentData();\n                    \n                    // Add update to feed\n                    setRealTimeUpdates(prev => [\n                      {\n                        id: Date.now(),\n                        type: 'TEAMS_ADDED',\n                        timestamp: new Date(),\n                        content: { tournamentId }\n                      },\n                      ...prev.slice(0, 19)\n                    ]);\n                  }}\n                  onCancel={() => setIsAddTeamModalOpen(false)}\n                />\n              </Modal>\n              \n              {tournament.teams && tournament.teams.length > 0 ? (\n                <div className=\"teams-list\">\n                  <h2>Participating Teams</h2>\n                  <div className=\"teams-grid\">\n                    {tournament.teams.map(team => (\n                      <div key={team.id} className=\"team-card\">\n                        {team.logo_url && (\n                          <div className=\"team-logo\">\n                            <img src={team.logo_url} alt={`${team.name} logo`} />\n                          </div>\n                        )}\n                        <div className=\"team-info\">\n                          <div className=\"team-name\">\n                            {team.tag && <span className=\"team-tag\">[{team.tag}]</span>}\n                            {team.name}\n                          </div>\n                          <div className=\"team-seed\">\n                            Seed: {team.seed_number || 'Unranked'}\n                          </div>\n                          <div className=\"team-status\">\n                            {team.is_active ? 'Active' : 'Inactive'}\n                          </div>\n                        </div>\n                        <div className=\"team-actions\">\n                          <Link \n                            to={`/teams/${team.id}`}\n                            className=\"view-team-btn\"\n                          >\n                            View Team\n                          </Link>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ) : (\n                <div className=\"no-teams\">\n                  <p>No teams have been added to this tournament yet.</p>\n                  <p>Use the \"Add Team\" button to register teams for this tournament.</p>\n                </div>\n              )}\n            </div>\n          )}\n          \n          {/* Live Updates tab */}\n          {activeTab === 'updates' && (\n            <div className=\"updates-tab\">\n              <h2>Live Tournament Updates</h2>\n              <div className=\"updates-container\">\n                {realTimeUpdates.length > 0 ? (\n                  <div className=\"updates-list\">\n                    {realTimeUpdates.map(update => (\n                      <div key={update.id} className={`update-item update-${update.type.toLowerCase()}`}>\n                        <div className=\"update-time\">\n                          {update.timestamp.toLocaleTimeString()}\n                        </div>\n                        <div className=\"update-content\">\n                          {formatUpdateContent(update)}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <div className=\"no-updates\">\n                    <p>No live updates yet.</p>\n                    <p>Updates will appear here in real-time as tournament activity occurs.</p>\n                  </div>\n                )}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Helper function to format update content\nconst formatUpdateContent = (update) => {\n  switch (update.type) {\n    case 'MATCHES_ADDED':\n      return `${update.content.added.length} new match(es) added to the tournament`;\n    case 'STANDINGS_UPDATE':\n      return 'Tournament standings have been updated';\n    case 'MATCH_COMPLETED':\n      return `Match #${update.content.matchNumber || ''} completed`;\n    case 'TEAM_JOINED':\n      return `Team \"${update.content.teamName}\" joined the tournament`;\n    default:\n      return 'Tournament update received';\n  }\n};\n\nexport default TournamentDetails;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}