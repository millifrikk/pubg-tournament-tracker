{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useLocation,useNavigate}from'react-router-dom';import MatchSearch from'./MatchSearch';import SimpleMatchSearch from'./SimpleMatchSearch';import matchesServiceEnhanced from'../../services/matchesServiceEnhanced';import'../../styles/toggle-switch.css';/**\n * Router component that allows switching between standard and enhanced match search modes\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MatchSearchRouter=()=>{const location=useLocation();const navigate=useNavigate();const queryParams=new URLSearchParams(location.search);// Check if the user has requested the enhanced mode\nconst[useEnhancedMode,setUseEnhancedMode]=useState(queryParams.get('mode')==='enhanced'||localStorage.getItem('preferEnhancedMatchSearch')==='true');// Update the URL when the mode changes\nuseEffect(()=>{// Save preference to localStorage\nlocalStorage.setItem('preferEnhancedMatchSearch',useEnhancedMode.toString());// Update URL without causing a page reload\nconst newParams=new URLSearchParams(location.search);if(useEnhancedMode){newParams.set('mode','enhanced');}else{newParams.delete('mode');}// Only update URL if needed\nif(newParams.toString()!==queryParams.toString()){navigate({search:newParams.toString()},{replace:true});}},[useEnhancedMode,location.search,navigate]);// Handle toggle change\nconst handleModeToggle=()=>{setUseEnhancedMode(!useEnhancedMode);};// Create props to pass to components with enhanced service\nconst enhancedProps={matchesService:matchesServiceEnhanced};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mode-toggle-container\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"mode-toggle\",children:[/*#__PURE__*/_jsx(\"span\",{className:`toggle-label ${!useEnhancedMode?'active':''}`,children:\"Standard\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"toggle-switch\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:useEnhancedMode,onChange:handleModeToggle}),/*#__PURE__*/_jsx(\"span\",{className:\"slider round\"})]}),/*#__PURE__*/_jsx(\"span\",{className:`toggle-label ${useEnhancedMode?'active':''}`,children:\"Enhanced\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mode-info\",children:useEnhancedMode?/*#__PURE__*/_jsx(\"p\",{children:\"Enhanced mode uses better error handling and retry logic to prevent connection issues\"}):/*#__PURE__*/_jsx(\"p\",{children:\"Standard mode connects directly to the PUBG API with basic error handling\"})})]}),useEnhancedMode?/*#__PURE__*/_jsx(SimpleMatchSearch,{...enhancedProps}):/*#__PURE__*/_jsx(MatchSearch,{})]});};export default MatchSearchRouter;","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","MatchSearch","SimpleMatchSearch","matchesServiceEnhanced","jsx","_jsx","jsxs","_jsxs","MatchSearchRouter","location","navigate","queryParams","URLSearchParams","search","useEnhancedMode","setUseEnhancedMode","get","localStorage","getItem","setItem","toString","newParams","set","delete","replace","handleModeToggle","enhancedProps","matchesService","children","className","type","checked","onChange"],"sources":["C:/Users/emil/OneDrive/Documents/development/apiDevelopment/pubg-tournament-tracker/client/src/pages/matches/MatchSearchRouter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport MatchSearch from './MatchSearch';\nimport SimpleMatchSearch from './SimpleMatchSearch';\nimport matchesServiceEnhanced from '../../services/matchesServiceEnhanced';\nimport '../../styles/toggle-switch.css';\n\n/**\n * Router component that allows switching between standard and enhanced match search modes\n */\nconst MatchSearchRouter = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const queryParams = new URLSearchParams(location.search);\n  \n  // Check if the user has requested the enhanced mode\n  const [useEnhancedMode, setUseEnhancedMode] = useState(\n    queryParams.get('mode') === 'enhanced' || \n    localStorage.getItem('preferEnhancedMatchSearch') === 'true'\n  );\n  \n  // Update the URL when the mode changes\n  useEffect(() => {\n    // Save preference to localStorage\n    localStorage.setItem('preferEnhancedMatchSearch', useEnhancedMode.toString());\n    \n    // Update URL without causing a page reload\n    const newParams = new URLSearchParams(location.search);\n    if (useEnhancedMode) {\n      newParams.set('mode', 'enhanced');\n    } else {\n      newParams.delete('mode');\n    }\n    \n    // Only update URL if needed\n    if (newParams.toString() !== queryParams.toString()) {\n      navigate({ search: newParams.toString() }, { replace: true });\n    }\n  }, [useEnhancedMode, location.search, navigate]);\n  \n  // Handle toggle change\n  const handleModeToggle = () => {\n    setUseEnhancedMode(!useEnhancedMode);\n  };\n  \n  // Create props to pass to components with enhanced service\n  const enhancedProps = {\n    matchesService: matchesServiceEnhanced\n  };\n  \n  return (\n    <div>\n      <div className=\"mode-toggle-container\">\n        <label className=\"mode-toggle\">\n          <span className={`toggle-label ${!useEnhancedMode ? 'active' : ''}`}>Standard</span>\n          <div className=\"toggle-switch\">\n            <input\n              type=\"checkbox\"\n              checked={useEnhancedMode}\n              onChange={handleModeToggle}\n            />\n            <span className=\"slider round\"></span>\n          </div>\n          <span className={`toggle-label ${useEnhancedMode ? 'active' : ''}`}>Enhanced</span>\n        </label>\n        <div className=\"mode-info\">\n          {useEnhancedMode ? (\n            <p>Enhanced mode uses better error handling and retry logic to prevent connection issues</p>\n          ) : (\n            <p>Standard mode connects directly to the PUBG API with basic error handling</p>\n          )}\n        </div>\n      </div>\n      \n      {useEnhancedMode ? \n        <SimpleMatchSearch {...enhancedProps} /> : \n        <MatchSearch />\n      }\n    </div>\n  );\n};\n\nexport default MatchSearchRouter;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,CAAEC,WAAW,KAAQ,kBAAkB,CAC3D,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,iBAAiB,KAAM,qBAAqB,CACnD,MAAO,CAAAC,sBAAsB,KAAM,uCAAuC,CAC1E,MAAO,gCAAgC,CAEvC;AACA;AACA,GAFA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGA,KAAM,CAAAC,iBAAiB,CAAGA,CAAA,GAAM,CAC9B,KAAM,CAAAC,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAW,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAW,WAAW,CAAG,GAAI,CAAAC,eAAe,CAACH,QAAQ,CAACI,MAAM,CAAC,CAExD;AACA,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGlB,QAAQ,CACpDc,WAAW,CAACK,GAAG,CAAC,MAAM,CAAC,GAAK,UAAU,EACtCC,YAAY,CAACC,OAAO,CAAC,2BAA2B,CAAC,GAAK,MACxD,CAAC,CAED;AACApB,SAAS,CAAC,IAAM,CACd;AACAmB,YAAY,CAACE,OAAO,CAAC,2BAA2B,CAAEL,eAAe,CAACM,QAAQ,CAAC,CAAC,CAAC,CAE7E;AACA,KAAM,CAAAC,SAAS,CAAG,GAAI,CAAAT,eAAe,CAACH,QAAQ,CAACI,MAAM,CAAC,CACtD,GAAIC,eAAe,CAAE,CACnBO,SAAS,CAACC,GAAG,CAAC,MAAM,CAAE,UAAU,CAAC,CACnC,CAAC,IAAM,CACLD,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC,CAC1B,CAEA;AACA,GAAIF,SAAS,CAACD,QAAQ,CAAC,CAAC,GAAKT,WAAW,CAACS,QAAQ,CAAC,CAAC,CAAE,CACnDV,QAAQ,CAAC,CAAEG,MAAM,CAAEQ,SAAS,CAACD,QAAQ,CAAC,CAAE,CAAC,CAAE,CAAEI,OAAO,CAAE,IAAK,CAAC,CAAC,CAC/D,CACF,CAAC,CAAE,CAACV,eAAe,CAAEL,QAAQ,CAACI,MAAM,CAAEH,QAAQ,CAAC,CAAC,CAEhD;AACA,KAAM,CAAAe,gBAAgB,CAAGA,CAAA,GAAM,CAC7BV,kBAAkB,CAAC,CAACD,eAAe,CAAC,CACtC,CAAC,CAED;AACA,KAAM,CAAAY,aAAa,CAAG,CACpBC,cAAc,CAAExB,sBAClB,CAAC,CAED,mBACEI,KAAA,QAAAqB,QAAA,eACErB,KAAA,QAAKsB,SAAS,CAAC,uBAAuB,CAAAD,QAAA,eACpCrB,KAAA,UAAOsB,SAAS,CAAC,aAAa,CAAAD,QAAA,eAC5BvB,IAAA,SAAMwB,SAAS,CAAE,gBAAgB,CAACf,eAAe,CAAG,QAAQ,CAAG,EAAE,EAAG,CAAAc,QAAA,CAAC,UAAQ,CAAM,CAAC,cACpFrB,KAAA,QAAKsB,SAAS,CAAC,eAAe,CAAAD,QAAA,eAC5BvB,IAAA,UACEyB,IAAI,CAAC,UAAU,CACfC,OAAO,CAAEjB,eAAgB,CACzBkB,QAAQ,CAAEP,gBAAiB,CAC5B,CAAC,cACFpB,IAAA,SAAMwB,SAAS,CAAC,cAAc,CAAO,CAAC,EACnC,CAAC,cACNxB,IAAA,SAAMwB,SAAS,CAAE,gBAAgBf,eAAe,CAAG,QAAQ,CAAG,EAAE,EAAG,CAAAc,QAAA,CAAC,UAAQ,CAAM,CAAC,EAC9E,CAAC,cACRvB,IAAA,QAAKwB,SAAS,CAAC,WAAW,CAAAD,QAAA,CACvBd,eAAe,cACdT,IAAA,MAAAuB,QAAA,CAAG,uFAAqF,CAAG,CAAC,cAE5FvB,IAAA,MAAAuB,QAAA,CAAG,2EAAyE,CAAG,CAChF,CACE,CAAC,EACH,CAAC,CAELd,eAAe,cACdT,IAAA,CAACH,iBAAiB,KAAKwB,aAAa,CAAG,CAAC,cACxCrB,IAAA,CAACJ,WAAW,GAAE,CAAC,EAEd,CAAC,CAEV,CAAC,CAED,cAAe,CAAAO,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}