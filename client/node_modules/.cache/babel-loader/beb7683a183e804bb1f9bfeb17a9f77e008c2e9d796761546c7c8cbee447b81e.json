{"ast":null,"code":"// client/src/services/teamService.js\nimport apiService from'./api';const BASE_URL='/api/teams';class TeamService{// Get all teams\nasync getAllTeams(){return apiService.get(BASE_URL);}// Get team by ID\nasync getTeamById(teamId){return apiService.get(`${BASE_URL}/${teamId}`);}// Create new team\nasync createTeam(teamData){console.log('TeamService: Creating team with data:',teamData);// Ensure fields match what the server expects\nconst processedData={name:teamData.name,tag:teamData.tag||teamData.name.substring(0,4).toUpperCase(),logoUrl:teamData.logoUrl};// Log processed data and headers\nconsole.log('Sending to server:',processedData);console.log('Auth header present:',!!localStorage.getItem('token'));return apiService.post(BASE_URL,processedData);}// Update team\nasync updateTeam(teamId,teamData){return apiService.put(`${BASE_URL}/${teamId}`,teamData);}// Delete team\nasync deleteTeam(teamId){return apiService.delete(`${BASE_URL}/${teamId}`);}// Get team players\nasync getTeamPlayers(teamId){return apiService.get(`${BASE_URL}/${teamId}/players`);}// Add player to team\nasync addPlayerToTeam(teamId,playerData){console.log('TeamService: Adding player to team',teamId,'with data:',playerData);try{const response=await apiService.post(`${BASE_URL}/${teamId}/players`,playerData);console.log('Add player response:',response);return response;}catch(error){console.error('Error in addPlayerToTeam:',error);throw error;}}// Remove player from team\nasync removePlayerFromTeam(teamId,playerId){return apiService.delete(`${BASE_URL}/${teamId}/players/${playerId}`);}// Update player\nasync updatePlayer(playerId,playerData){return apiService.put(`/api/players/${playerId}`,{pubgName:playerData.pubgName,pubgId:playerData.pubgId,platform:playerData.platform});}}export default new TeamService();","map":{"version":3,"names":["apiService","BASE_URL","TeamService","getAllTeams","get","getTeamById","teamId","createTeam","teamData","console","log","processedData","name","tag","substring","toUpperCase","logoUrl","localStorage","getItem","post","updateTeam","put","deleteTeam","delete","getTeamPlayers","addPlayerToTeam","playerData","response","error","removePlayerFromTeam","playerId","updatePlayer","pubgName","pubgId","platform"],"sources":["C:/Users/emil/OneDrive/Documents/development/apiDevelopment/pubg-tournament-tracker/client/src/services/teamService.js"],"sourcesContent":["// client/src/services/teamService.js\n\nimport apiService from './api';\n\nconst BASE_URL = '/api/teams';\n\nclass TeamService {\n  // Get all teams\n  async getAllTeams() {\n    return apiService.get(BASE_URL);\n  }\n  \n  // Get team by ID\n  async getTeamById(teamId) {\n    return apiService.get(`${BASE_URL}/${teamId}`);\n  }\n  \n  // Create new team\n  async createTeam(teamData) {\n    console.log('TeamService: Creating team with data:', teamData);\n    \n    // Ensure fields match what the server expects\n    const processedData = {\n      name: teamData.name,\n      tag: teamData.tag || teamData.name.substring(0, 4).toUpperCase(),\n      logoUrl: teamData.logoUrl\n    };\n    \n    // Log processed data and headers\n    console.log('Sending to server:', processedData);\n    console.log('Auth header present:', !!localStorage.getItem('token'));\n    \n    return apiService.post(BASE_URL, processedData);\n  }\n  \n  // Update team\n  async updateTeam(teamId, teamData) {\n    return apiService.put(`${BASE_URL}/${teamId}`, teamData);\n  }\n  \n  // Delete team\n  async deleteTeam(teamId) {\n    return apiService.delete(`${BASE_URL}/${teamId}`);\n  }\n  \n  // Get team players\n  async getTeamPlayers(teamId) {\n    return apiService.get(`${BASE_URL}/${teamId}/players`);\n  }\n  \n  // Add player to team\n  async addPlayerToTeam(teamId, playerData) {\n    console.log('TeamService: Adding player to team', teamId, 'with data:', playerData);\n    try {\n      const response = await apiService.post(`${BASE_URL}/${teamId}/players`, playerData);\n      console.log('Add player response:', response);\n      return response;\n    } catch (error) {\n      console.error('Error in addPlayerToTeam:', error);\n      throw error;\n    }\n  }\n  \n  // Remove player from team\n  async removePlayerFromTeam(teamId, playerId) {\n    return apiService.delete(`${BASE_URL}/${teamId}/players/${playerId}`);\n  }\n  \n  // Update player\n  async updatePlayer(playerId, playerData) {\n    return apiService.put(`/api/players/${playerId}`, {\n      pubgName: playerData.pubgName,\n      pubgId: playerData.pubgId,\n      platform: playerData.platform\n    });\n  }\n}\n\nexport default new TeamService();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}