{"ast":null,"code":"// client/src/services/teamService.js\n\nimport apiService from './api';\nconst BASE_URL = '/api/teams';\nclass TeamService {\n  // Get all teams\n  async getAllTeams() {\n    return apiService.get(BASE_URL);\n  }\n\n  // Get team by ID\n  async getTeamById(teamId) {\n    return apiService.get(`${BASE_URL}/${teamId}`);\n  }\n\n  // Create new team\n  async createTeam(teamData) {\n    console.log('TeamService: Creating team with data:', teamData);\n\n    // Ensure fields match what the server expects\n    const processedData = {\n      name: teamData.name,\n      tag: teamData.tag || teamData.name.substring(0, 4).toUpperCase(),\n      logoUrl: teamData.logoUrl\n    };\n\n    // Log processed data and headers\n    console.log('Sending to server:', processedData);\n    console.log('Auth header present:', !!localStorage.getItem('token'));\n    return apiService.post(BASE_URL, processedData);\n  }\n\n  // Update team\n  async updateTeam(teamId, teamData) {\n    return apiService.put(`${BASE_URL}/${teamId}`, teamData);\n  }\n\n  // Delete team\n  async deleteTeam(teamId) {\n    return apiService.delete(`${BASE_URL}/${teamId}`);\n  }\n\n  // Get team players\n  async getTeamPlayers(teamId) {\n    return apiService.get(`${BASE_URL}/${teamId}/players`);\n  }\n\n  // Add player to team\n  async addPlayerToTeam(teamId, playerData) {\n    return apiService.post(`${BASE_URL}/${teamId}/players`, playerData);\n  }\n\n  // Remove player from team\n  async removePlayerFromTeam(teamId, playerId) {\n    return apiService.delete(`${BASE_URL}/${teamId}/players/${playerId}`);\n  }\n\n  // Update player\n  async updatePlayer(playerId, playerData) {\n    return apiService.put(`/api/players/${playerId}`, {\n      pubgName: playerData.pubgName,\n      pubgId: playerData.pubgId,\n      platform: playerData.platform\n    });\n  }\n}\nexport default new TeamService();","map":{"version":3,"names":["apiService","BASE_URL","TeamService","getAllTeams","get","getTeamById","teamId","createTeam","teamData","console","log","processedData","name","tag","substring","toUpperCase","logoUrl","localStorage","getItem","post","updateTeam","put","deleteTeam","delete","getTeamPlayers","addPlayerToTeam","playerData","removePlayerFromTeam","playerId","updatePlayer","pubgName","pubgId","platform"],"sources":["C:/Users/emil/OneDrive/Documents/development/apiDevelopment/pubg-tournament-tracker/client/src/services/teamService.js"],"sourcesContent":["// client/src/services/teamService.js\n\nimport apiService from './api';\n\nconst BASE_URL = '/api/teams';\n\nclass TeamService {\n  // Get all teams\n  async getAllTeams() {\n    return apiService.get(BASE_URL);\n  }\n  \n  // Get team by ID\n  async getTeamById(teamId) {\n    return apiService.get(`${BASE_URL}/${teamId}`);\n  }\n  \n  // Create new team\n  async createTeam(teamData) {\n    console.log('TeamService: Creating team with data:', teamData);\n    \n    // Ensure fields match what the server expects\n    const processedData = {\n      name: teamData.name,\n      tag: teamData.tag || teamData.name.substring(0, 4).toUpperCase(),\n      logoUrl: teamData.logoUrl\n    };\n    \n    // Log processed data and headers\n    console.log('Sending to server:', processedData);\n    console.log('Auth header present:', !!localStorage.getItem('token'));\n    \n    return apiService.post(BASE_URL, processedData);\n  }\n  \n  // Update team\n  async updateTeam(teamId, teamData) {\n    return apiService.put(`${BASE_URL}/${teamId}`, teamData);\n  }\n  \n  // Delete team\n  async deleteTeam(teamId) {\n    return apiService.delete(`${BASE_URL}/${teamId}`);\n  }\n  \n  // Get team players\n  async getTeamPlayers(teamId) {\n    return apiService.get(`${BASE_URL}/${teamId}/players`);\n  }\n  \n  // Add player to team\n  async addPlayerToTeam(teamId, playerData) {\n    return apiService.post(`${BASE_URL}/${teamId}/players`, playerData);\n  }\n  \n  // Remove player from team\n  async removePlayerFromTeam(teamId, playerId) {\n    return apiService.delete(`${BASE_URL}/${teamId}/players/${playerId}`);\n  }\n  \n  // Update player\n  async updatePlayer(playerId, playerData) {\n    return apiService.put(`/api/players/${playerId}`, {\n      pubgName: playerData.pubgName,\n      pubgId: playerData.pubgId,\n      platform: playerData.platform\n    });\n  }\n}\n\nexport default new TeamService();"],"mappings":"AAAA;;AAEA,OAAOA,UAAU,MAAM,OAAO;AAE9B,MAAMC,QAAQ,GAAG,YAAY;AAE7B,MAAMC,WAAW,CAAC;EAChB;EACA,MAAMC,WAAWA,CAAA,EAAG;IAClB,OAAOH,UAAU,CAACI,GAAG,CAACH,QAAQ,CAAC;EACjC;;EAEA;EACA,MAAMI,WAAWA,CAACC,MAAM,EAAE;IACxB,OAAON,UAAU,CAACI,GAAG,CAAC,GAAGH,QAAQ,IAAIK,MAAM,EAAE,CAAC;EAChD;;EAEA;EACA,MAAMC,UAAUA,CAACC,QAAQ,EAAE;IACzBC,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEF,QAAQ,CAAC;;IAE9D;IACA,MAAMG,aAAa,GAAG;MACpBC,IAAI,EAAEJ,QAAQ,CAACI,IAAI;MACnBC,GAAG,EAAEL,QAAQ,CAACK,GAAG,IAAIL,QAAQ,CAACI,IAAI,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAChEC,OAAO,EAAER,QAAQ,CAACQ;IACpB,CAAC;;IAED;IACAP,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEC,aAAa,CAAC;IAChDF,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAE,CAAC,CAACO,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IAEpE,OAAOlB,UAAU,CAACmB,IAAI,CAAClB,QAAQ,EAAEU,aAAa,CAAC;EACjD;;EAEA;EACA,MAAMS,UAAUA,CAACd,MAAM,EAAEE,QAAQ,EAAE;IACjC,OAAOR,UAAU,CAACqB,GAAG,CAAC,GAAGpB,QAAQ,IAAIK,MAAM,EAAE,EAAEE,QAAQ,CAAC;EAC1D;;EAEA;EACA,MAAMc,UAAUA,CAAChB,MAAM,EAAE;IACvB,OAAON,UAAU,CAACuB,MAAM,CAAC,GAAGtB,QAAQ,IAAIK,MAAM,EAAE,CAAC;EACnD;;EAEA;EACA,MAAMkB,cAAcA,CAAClB,MAAM,EAAE;IAC3B,OAAON,UAAU,CAACI,GAAG,CAAC,GAAGH,QAAQ,IAAIK,MAAM,UAAU,CAAC;EACxD;;EAEA;EACA,MAAMmB,eAAeA,CAACnB,MAAM,EAAEoB,UAAU,EAAE;IACxC,OAAO1B,UAAU,CAACmB,IAAI,CAAC,GAAGlB,QAAQ,IAAIK,MAAM,UAAU,EAAEoB,UAAU,CAAC;EACrE;;EAEA;EACA,MAAMC,oBAAoBA,CAACrB,MAAM,EAAEsB,QAAQ,EAAE;IAC3C,OAAO5B,UAAU,CAACuB,MAAM,CAAC,GAAGtB,QAAQ,IAAIK,MAAM,YAAYsB,QAAQ,EAAE,CAAC;EACvE;;EAEA;EACA,MAAMC,YAAYA,CAACD,QAAQ,EAAEF,UAAU,EAAE;IACvC,OAAO1B,UAAU,CAACqB,GAAG,CAAC,gBAAgBO,QAAQ,EAAE,EAAE;MAChDE,QAAQ,EAAEJ,UAAU,CAACI,QAAQ;MAC7BC,MAAM,EAAEL,UAAU,CAACK,MAAM;MACzBC,QAAQ,EAAEN,UAAU,CAACM;IACvB,CAAC,CAAC;EACJ;AACF;AAEA,eAAe,IAAI9B,WAAW,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}