{"ast":null,"code":"import React,{useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const Modal=_ref=>{let{children,isOpen,onClose}=_ref;// Close modal when ESC key is pressed\nuseEffect(()=>{const handleEscKey=event=>{if(event.key==='Escape'&&isOpen){onClose();}};document.addEventListener('keydown',handleEscKey);// Prevent body scrolling when modal is open\nif(isOpen){document.body.style.overflow='hidden';}return()=>{document.removeEventListener('keydown',handleEscKey);document.body.style.overflow='auto';};},[isOpen,onClose]);// Don't render anything if modal is closed\nif(!isOpen)return null;// Handle click on backdrop to close modal\nconst handleBackdropClick=e=>{if(e.target===e.currentTarget){onClose();}};return/*#__PURE__*/_jsx(\"div\",{className:\"modal-backdrop\",onClick:handleBackdropClick,children:/*#__PURE__*/_jsx(\"div\",{className:\"modal-content\",onClick:e=>e.stopPropagation(),children:children})});};export default Modal;","map":{"version":3,"names":["React","useEffect","jsx","_jsx","Modal","_ref","children","isOpen","onClose","handleEscKey","event","key","document","addEventListener","body","style","overflow","removeEventListener","handleBackdropClick","e","target","currentTarget","className","onClick","stopPropagation"],"sources":["C:/Users/emil/OneDrive/Documents/development/apiDevelopment/pubg-tournament-tracker/client/src/components/common/Modal.js"],"sourcesContent":["import React, { useEffect } from 'react';\n\nconst Modal = ({ children, isOpen, onClose }) => {\n  // Close modal when ESC key is pressed\n  useEffect(() => {\n    const handleEscKey = (event) => {\n      if (event.key === 'Escape' && isOpen) {\n        onClose();\n      }\n    };\n\n    document.addEventListener('keydown', handleEscKey);\n\n    // Prevent body scrolling when modal is open\n    if (isOpen) {\n      document.body.style.overflow = 'hidden';\n    }\n\n    return () => {\n      document.removeEventListener('keydown', handleEscKey);\n      document.body.style.overflow = 'auto';\n    };\n  }, [isOpen, onClose]);\n\n  // Don't render anything if modal is closed\n  if (!isOpen) return null;\n\n  // Handle click on backdrop to close modal\n  const handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return (\n    <div className=\"modal-backdrop\" onClick={handleBackdropClick}>\n      <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEzC,KAAM,CAAAC,KAAK,CAAGC,IAAA,EAAmC,IAAlC,CAAEC,QAAQ,CAAEC,MAAM,CAAEC,OAAQ,CAAC,CAAAH,IAAA,CAC1C;AACAJ,SAAS,CAAC,IAAM,CACd,KAAM,CAAAQ,YAAY,CAAIC,KAAK,EAAK,CAC9B,GAAIA,KAAK,CAACC,GAAG,GAAK,QAAQ,EAAIJ,MAAM,CAAE,CACpCC,OAAO,CAAC,CAAC,CACX,CACF,CAAC,CAEDI,QAAQ,CAACC,gBAAgB,CAAC,SAAS,CAAEJ,YAAY,CAAC,CAElD;AACA,GAAIF,MAAM,CAAE,CACVK,QAAQ,CAACE,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAG,QAAQ,CACzC,CAEA,MAAO,IAAM,CACXJ,QAAQ,CAACK,mBAAmB,CAAC,SAAS,CAAER,YAAY,CAAC,CACrDG,QAAQ,CAACE,IAAI,CAACC,KAAK,CAACC,QAAQ,CAAG,MAAM,CACvC,CAAC,CACH,CAAC,CAAE,CAACT,MAAM,CAAEC,OAAO,CAAC,CAAC,CAErB;AACA,GAAI,CAACD,MAAM,CAAE,MAAO,KAAI,CAExB;AACA,KAAM,CAAAW,mBAAmB,CAAIC,CAAC,EAAK,CACjC,GAAIA,CAAC,CAACC,MAAM,GAAKD,CAAC,CAACE,aAAa,CAAE,CAChCb,OAAO,CAAC,CAAC,CACX,CACF,CAAC,CAED,mBACEL,IAAA,QAAKmB,SAAS,CAAC,gBAAgB,CAACC,OAAO,CAAEL,mBAAoB,CAAAZ,QAAA,cAC3DH,IAAA,QAAKmB,SAAS,CAAC,eAAe,CAACC,OAAO,CAAEJ,CAAC,EAAIA,CAAC,CAACK,eAAe,CAAC,CAAE,CAAAlB,QAAA,CAC9DA,QAAQ,CACN,CAAC,CACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAF,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}