{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import matchesServiceEnhanced from'../../services/matchesServiceEnhanced';import LoadingSpinner from'../../components/common/LoadingSpinner';import{getMatchType,getMatchTypeClass,formatMatchDate,getRelativeTime}from'../../utils/matchUtils';import'../../styles/matches.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SimpleMatchSearch=_ref=>{let{matchesService=matchesServiceEnhanced}=_ref;// Load saved state from sessionStorage on mount\nuseEffect(()=>{try{// Check if we have a saved search state\nconst savedState=sessionStorage.getItem('lastMatchSearch');if(savedState){const{searchForm:savedForm,matches:savedMatches,timestamp}=JSON.parse(savedState);// Only restore if the saved state is relatively fresh (within the last hour)\nconst isStateFresh=Date.now()-timestamp<3600000;// 1 hour\nif(isStateFresh){console.log('Restoring previous search state');setSearchForm(savedForm);setMatches(savedMatches);}}}catch(error){console.error('Error restoring search state:',error);// Silently fail - just use default state\n}},[]);const[loading,setLoading]=useState(false);const[searching,setSearching]=useState(false);const[error,setError]=useState(null);const[matches,setMatches]=useState([]);// Form state\nconst[searchForm,setSearchForm]=useState({playerName:'',platform:'steam',timeRange:'24h',gameMode:'all',mapName:'all',customMatchOnly:true});// Platform options\nconst platforms=[{value:'steam',label:'Steam (PC)'},{value:'psn',label:'PlayStation'},{value:'xbox',label:'Xbox'}];// Time range options\nconst timeRanges=[{value:'24h',label:'Last 24 hours'},{value:'48h',label:'Last 48 hours'},{value:'7d',label:'Last 7 days'},{value:'14d',label:'Last 14 days'}];// Game mode options\nconst gameModes=[{value:'all',label:'All Modes'},{value:'squad',label:'Squad'},{value:'squad-fpp',label:'Squad (FPP)'},{value:'duo',label:'Duo'},{value:'duo-fpp',label:'Duo (FPP)'},{value:'solo',label:'Solo'},{value:'solo-fpp',label:'Solo (FPP)'}];// Map options\nconst maps=[{value:'all',label:'All Maps'},{value:'Baltic_Main',label:'Erangel'},{value:'Desert_Main',label:'Miramar'},{value:'Savage_Main',label:'Sanhok'},{value:'DihorOtok_Main',label:'Vikendi'},{value:'Tiger_Main',label:'Taego'},{value:'Kiki_Main',label:'Deston'}];// Handle input changes\nconst handleInputChange=e=>{const{name,value,type,checked}=e.target;setSearchForm(prev=>({...prev,[name]:type==='checkbox'?checked:value}));};// Handle search form submission\nconst handleSearch=async e=>{e.preventDefault();setSearching(true);setError(null);setMatches([]);try{// Use enhanced service with better reliability\nconst response=await matchesService.searchMatches(searchForm);setMatches(response.data);// Save search state to sessionStorage\nsessionStorage.setItem('lastMatchSearch',JSON.stringify({searchForm,matches:response.data,timestamp:Date.now()}));// Log the source of the data (for debugging)\nif(response.meta&&response.meta.source){console.log(`Match data source: ${response.meta.source}`);}}catch(err){console.error('Error searching matches:',err);setError(err.message||'Failed to search matches');}finally{setSearching(false);}};// Get readable map name\nconst getMapName=mapId=>{const map=maps.find(m=>m.value===mapId);return map?map.label:mapId;};// Get readable game mode\nconst getGameMode=modeId=>{const mode=gameModes.find(m=>m.value===modeId);return mode?mode.label:modeId;};// Handle error dismissal\nconst dismissError=()=>{setError(null);};return/*#__PURE__*/_jsx(\"div\",{className:\"match-search-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-header\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"page-title\",children:\"Find Custom Matches\"}),/*#__PURE__*/_jsx(\"div\",{className:\"subtitle\",children:\"Enhanced Mode\"})]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-message\",children:[/*#__PURE__*/_jsx(\"p\",{children:error}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-secondary\",onClick:dismissError,children:\"Dismiss\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Search Criteria\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSearch,className:\"search-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"playerName\",children:\"Player Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"playerName\",name:\"playerName\",value:searchForm.playerName,onChange:handleInputChange,placeholder:\"Enter PUBG player name\"}),/*#__PURE__*/_jsx(\"p\",{className:\"help-text\",children:\"Enter a player name to find matches they participated in\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"platform\",children:\"Platform\"}),/*#__PURE__*/_jsx(\"select\",{id:\"platform\",name:\"platform\",value:searchForm.platform,onChange:handleInputChange,children:platforms.map(option=>/*#__PURE__*/_jsx(\"option\",{value:option.value,children:option.label},option.value))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"timeRange\",children:\"Time Range\"}),/*#__PURE__*/_jsx(\"select\",{id:\"timeRange\",name:\"timeRange\",value:searchForm.timeRange,onChange:handleInputChange,children:timeRanges.map(option=>/*#__PURE__*/_jsx(\"option\",{value:option.value,children:option.label},option.value))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"gameMode\",children:\"Game Mode\"}),/*#__PURE__*/_jsx(\"select\",{id:\"gameMode\",name:\"gameMode\",value:searchForm.gameMode,onChange:handleInputChange,children:gameModes.map(option=>/*#__PURE__*/_jsx(\"option\",{value:option.value,children:option.label},option.value))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"mapName\",children:\"Map\"}),/*#__PURE__*/_jsx(\"select\",{id:\"mapName\",name:\"mapName\",value:searchForm.mapName,onChange:handleInputChange,children:maps.map(option=>/*#__PURE__*/_jsx(\"option\",{value:option.value,children:option.label},option.value))})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group checkbox-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"customMatchOnly\",name:\"customMatchOnly\",checked:searchForm.customMatchOnly,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"span\",{className:\"checkbox-label\",children:\"Custom Match Only\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"help-text\",children:\"Only show matches that are likely to be custom/tournament matches\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn-primary\",disabled:searching,children:searching?'Searching...':'Search Matches'})})]})]}),searching?/*#__PURE__*/_jsxs(\"div\",{className:\"searching-indicator\",children:[/*#__PURE__*/_jsx(LoadingSpinner,{}),/*#__PURE__*/_jsx(\"p\",{children:\"Searching for matches...\"}),/*#__PURE__*/_jsx(\"small\",{children:\"Using enhanced search with improved error handling...\"})]}):matches.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"results-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"results-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Search Results\"}),/*#__PURE__*/_jsxs(\"p\",{children:[matches.length,\" matches found\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"matches-list\",children:matches.map(match=>{var _match$meta,_match$meta2;const matchId=match.data.id;const matchData=match.data.attributes;// Get match type from meta or determine it from attributes\nconst matchType=((_match$meta=match.meta)===null||_match$meta===void 0?void 0:_match$meta.matchType)||getMatchType(match);const isRegistered=((_match$meta2=match.meta)===null||_match$meta2===void 0?void 0:_match$meta2.isRegistered)||false;return/*#__PURE__*/_jsxs(\"div\",{className:`match-card ${getMatchTypeClass(matchType)} ${isRegistered?'registered':''}`,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-meta\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"match-id\",children:[\"ID: \",matchId.substring(0,8),\"...\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"match-date\",title:formatMatchDate(matchData.createdAt),children:getRelativeTime(matchData.createdAt)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-map\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Map:\"}),\" \",getMapName(matchData.mapName)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-mode\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Mode:\"}),\" \",getGameMode(matchData.gameMode)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-players\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Players:\"}),\" \",matchData.playerCount||\"Unknown\"]})]}),matchType!=='PUBLIC'&&/*#__PURE__*/_jsxs(\"div\",{className:`match-type-indicator ${matchType.toLowerCase()}-indicator`,children:[/*#__PURE__*/_jsxs(\"span\",{className:\"badge\",children:[matchType,\" Match\"]}),matchType==='CUSTOM'&&match.meta.verificationScore&&/*#__PURE__*/_jsxs(\"span\",{className:\"verification-score\",children:[match.meta.verificationScore,\"% match\"]})]}),isRegistered&&/*#__PURE__*/_jsxs(\"div\",{className:\"registered-indicator\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"badge\",children:\"Registered\"}),match.meta.verified&&/*#__PURE__*/_jsx(\"span\",{className:\"verified-badge\",children:\"Verified\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"match-actions\",children:/*#__PURE__*/_jsx(Link,{to:`/matches/${matchId}`,className:\"btn-secondary\",children:\"View Details\"})})]},matchId);})})]}):!searching&&/*#__PURE__*/_jsxs(\"div\",{className:\"no-results\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Search for matches by entering a player name and using the filters above.\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"search-tips\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Tips:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Enter the name of a player who participated in the custom match\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Try limiting your search to the past 24 hours for faster results\"}),/*#__PURE__*/_jsx(\"li\",{children:\"This enhanced search mode includes better error handling and retry logic\"}),/*#__PURE__*/_jsx(\"li\",{children:\"The enhanced mode will attempt to retrieve data even if the API has connection issues\"})]})]})]})]})});};export default SimpleMatchSearch;","map":{"version":3,"names":["React","useState","useEffect","Link","matchesServiceEnhanced","LoadingSpinner","getMatchType","getMatchTypeClass","formatMatchDate","getRelativeTime","jsx","_jsx","jsxs","_jsxs","SimpleMatchSearch","_ref","matchesService","savedState","sessionStorage","getItem","searchForm","savedForm","matches","savedMatches","timestamp","JSON","parse","isStateFresh","Date","now","console","log","setSearchForm","setMatches","error","loading","setLoading","searching","setSearching","setError","playerName","platform","timeRange","gameMode","mapName","customMatchOnly","platforms","value","label","timeRanges","gameModes","maps","handleInputChange","e","name","type","checked","target","prev","handleSearch","preventDefault","response","searchMatches","data","setItem","stringify","meta","source","err","message","getMapName","mapId","map","find","m","getGameMode","modeId","mode","dismissError","className","children","onClick","onSubmit","htmlFor","id","onChange","placeholder","option","disabled","length","match","_match$meta","_match$meta2","matchId","matchData","attributes","matchType","isRegistered","substring","title","createdAt","playerCount","toLowerCase","verificationScore","verified","to"],"sources":["C:/Users/emil/OneDrive/Documents/development/apiDevelopment/pubg-tournament-tracker/client/src/pages/matches/SimpleMatchSearch.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport matchesServiceEnhanced from '../../services/matchesServiceEnhanced';\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\nimport { getMatchType, getMatchTypeClass, formatMatchDate, getRelativeTime } from '../../utils/matchUtils';\nimport '../../styles/matches.css';\n\nconst SimpleMatchSearch = ({ matchesService = matchesServiceEnhanced }) => {\n  \n  // Load saved state from sessionStorage on mount\n  useEffect(() => {\n    try {\n      // Check if we have a saved search state\n      const savedState = sessionStorage.getItem('lastMatchSearch');\n      if (savedState) {\n        const { searchForm: savedForm, matches: savedMatches, timestamp } = JSON.parse(savedState);\n        \n        // Only restore if the saved state is relatively fresh (within the last hour)\n        const isStateFresh = Date.now() - timestamp < 3600000; // 1 hour\n        \n        if (isStateFresh) {\n          console.log('Restoring previous search state');\n          setSearchForm(savedForm);\n          setMatches(savedMatches);\n        }\n      }\n    } catch (error) {\n      console.error('Error restoring search state:', error);\n      // Silently fail - just use default state\n    }\n  }, []);\n  const [loading, setLoading] = useState(false);\n  const [searching, setSearching] = useState(false);\n  const [error, setError] = useState(null);\n  const [matches, setMatches] = useState([]);\n  \n  // Form state\n  const [searchForm, setSearchForm] = useState({\n    playerName: '',\n    platform: 'steam',\n    timeRange: '24h',\n    gameMode: 'all',\n    mapName: 'all',\n    customMatchOnly: true\n  });\n  \n  // Platform options\n  const platforms = [\n    { value: 'steam', label: 'Steam (PC)' },\n    { value: 'psn', label: 'PlayStation' },\n    { value: 'xbox', label: 'Xbox' }\n  ];\n  \n  // Time range options\n  const timeRanges = [\n    { value: '24h', label: 'Last 24 hours' },\n    { value: '48h', label: 'Last 48 hours' },\n    { value: '7d', label: 'Last 7 days' },\n    { value: '14d', label: 'Last 14 days' }\n  ];\n  \n  // Game mode options\n  const gameModes = [\n    { value: 'all', label: 'All Modes' },\n    { value: 'squad', label: 'Squad' },\n    { value: 'squad-fpp', label: 'Squad (FPP)' },\n    { value: 'duo', label: 'Duo' },\n    { value: 'duo-fpp', label: 'Duo (FPP)' },\n    { value: 'solo', label: 'Solo' },\n    { value: 'solo-fpp', label: 'Solo (FPP)' }\n  ];\n  \n  // Map options\n  const maps = [\n    { value: 'all', label: 'All Maps' },\n    { value: 'Baltic_Main', label: 'Erangel' },\n    { value: 'Desert_Main', label: 'Miramar' },\n    { value: 'Savage_Main', label: 'Sanhok' },\n    { value: 'DihorOtok_Main', label: 'Vikendi' },\n    { value: 'Tiger_Main', label: 'Taego' },\n    { value: 'Kiki_Main', label: 'Deston' }\n  ];\n  \n  // Handle input changes\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setSearchForm(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n  \n  // Handle search form submission\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    setSearching(true);\n    setError(null);\n    setMatches([]);\n    \n    try {\n      // Use enhanced service with better reliability\n      const response = await matchesService.searchMatches(searchForm);\n      setMatches(response.data);\n      \n      // Save search state to sessionStorage\n      sessionStorage.setItem('lastMatchSearch', JSON.stringify({\n        searchForm,\n        matches: response.data,\n        timestamp: Date.now()\n      }));\n      \n      // Log the source of the data (for debugging)\n      if (response.meta && response.meta.source) {\n        console.log(`Match data source: ${response.meta.source}`);\n      }\n    } catch (err) {\n      console.error('Error searching matches:', err);\n      setError(err.message || 'Failed to search matches');\n    } finally {\n      setSearching(false);\n    }\n  };\n  \n  // Get readable map name\n  const getMapName = (mapId) => {\n    const map = maps.find(m => m.value === mapId);\n    return map ? map.label : mapId;\n  };\n  \n  // Get readable game mode\n  const getGameMode = (modeId) => {\n    const mode = gameModes.find(m => m.value === modeId);\n    return mode ? mode.label : modeId;\n  };\n  \n  // Handle error dismissal\n  const dismissError = () => {\n    setError(null);\n  };\n  \n  return (\n    <div className=\"match-search-page\">\n      <div className=\"container\">\n        <div className=\"page-header\">\n          <h1 className=\"page-title\">Find Custom Matches</h1>\n          <div className=\"subtitle\">Enhanced Mode</div>\n        </div>\n        \n        {error && (\n          <div className=\"error-message\">\n            <p>{error}</p>\n            <button className=\"btn-secondary\" onClick={dismissError}>Dismiss</button>\n          </div>\n        )}\n        \n        <div className=\"search-section\">\n          <h2>Search Criteria</h2>\n          <form onSubmit={handleSearch} className=\"search-form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"playerName\">Player Name</label>\n              <input\n                type=\"text\"\n                id=\"playerName\"\n                name=\"playerName\"\n                value={searchForm.playerName}\n                onChange={handleInputChange}\n                placeholder=\"Enter PUBG player name\"\n              />\n              <p className=\"help-text\">\n                Enter a player name to find matches they participated in\n              </p>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"platform\">Platform</label>\n                <select\n                  id=\"platform\"\n                  name=\"platform\"\n                  value={searchForm.platform}\n                  onChange={handleInputChange}\n                >\n                  {platforms.map(option => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"timeRange\">Time Range</label>\n                <select\n                  id=\"timeRange\"\n                  name=\"timeRange\"\n                  value={searchForm.timeRange}\n                  onChange={handleInputChange}\n                >\n                  {timeRanges.map(option => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"gameMode\">Game Mode</label>\n                <select\n                  id=\"gameMode\"\n                  name=\"gameMode\"\n                  value={searchForm.gameMode}\n                  onChange={handleInputChange}\n                >\n                  {gameModes.map(option => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"mapName\">Map</label>\n                <select\n                  id=\"mapName\"\n                  name=\"mapName\"\n                  value={searchForm.mapName}\n                  onChange={handleInputChange}\n                >\n                  {maps.map(option => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group checkbox-group\">\n                <label className=\"checkbox-container\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"customMatchOnly\"\n                    name=\"customMatchOnly\"\n                    checked={searchForm.customMatchOnly}\n                    onChange={handleInputChange}\n                  />\n                  <span className=\"checkbox-label\">Custom Match Only</span>\n                </label>\n                <p className=\"help-text\">\n                  Only show matches that are likely to be custom/tournament matches\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"form-actions\">\n              <button type=\"submit\" className=\"btn-primary\" disabled={searching}>\n                {searching ? 'Searching...' : 'Search Matches'}\n              </button>\n            </div>\n          </form>\n        </div>\n        \n        {searching ? (\n          <div className=\"searching-indicator\">\n            <LoadingSpinner />\n            <p>Searching for matches...</p>\n            <small>Using enhanced search with improved error handling...</small>\n          </div>\n        ) : matches.length > 0 ? (\n          <div className=\"results-section\">\n            <div className=\"results-header\">\n              <h2>Search Results</h2>\n              <p>{matches.length} matches found</p>\n            </div>\n            \n            <div className=\"matches-list\">\n              {matches.map(match => {\n                const matchId = match.data.id;\n                const matchData = match.data.attributes;\n                // Get match type from meta or determine it from attributes\n                const matchType = match.meta?.matchType || getMatchType(match);\n                const isRegistered = match.meta?.isRegistered || false;\n                \n                return (\n                  <div \n                    key={matchId} \n                    className={`match-card ${getMatchTypeClass(matchType)} ${isRegistered ? 'registered' : ''}`}\n                  >\n                    <div className=\"match-info\">\n                      <div className=\"match-meta\">\n                        <span className=\"match-id\">ID: {matchId.substring(0, 8)}...</span>\n                        <span className=\"match-date\" title={formatMatchDate(matchData.createdAt)}>\n                          {getRelativeTime(matchData.createdAt)}\n                        </span>\n                      </div>\n                      \n                      <div className=\"match-details\">\n                        <div className=\"match-map\">\n                          <strong>Map:</strong> {getMapName(matchData.mapName)}\n                        </div>\n                        <div className=\"match-mode\">\n                          <strong>Mode:</strong> {getGameMode(matchData.gameMode)}\n                        </div>\n                        <div className=\"match-players\">\n                          <strong>Players:</strong> {matchData.playerCount || \"Unknown\"}\n                        </div>\n                      </div>\n                      \n                      {matchType !== 'PUBLIC' && (\n                        <div className={`match-type-indicator ${matchType.toLowerCase()}-indicator`}>\n                          <span className=\"badge\">{matchType} Match</span>\n                          {matchType === 'CUSTOM' && match.meta.verificationScore && (\n                            <span className=\"verification-score\">\n                              {match.meta.verificationScore}% match\n                            </span>\n                          )}\n                        </div>\n                      )}\n                      \n                      {isRegistered && (\n                        <div className=\"registered-indicator\">\n                          <span className=\"badge\">Registered</span>\n                          {match.meta.verified && (\n                            <span className=\"verified-badge\">Verified</span>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                    \n                    <div className=\"match-actions\">\n                      <Link to={`/matches/${matchId}`} className=\"btn-secondary\">\n                        View Details\n                      </Link>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        ) : (\n          !searching && (\n            <div className=\"no-results\">\n              <p>Search for matches by entering a player name and using the filters above.</p>\n              <p className=\"search-tips\">\n                <strong>Tips:</strong>\n                <ul>\n                  <li>Enter the name of a player who participated in the custom match</li>\n                  <li>Try limiting your search to the past 24 hours for faster results</li>\n                  <li>This enhanced search mode includes better error handling and retry logic</li>\n                  <li>The enhanced mode will attempt to retrieve data even if the API has connection issues</li>\n                </ul>\n              </p>\n            </div>\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SimpleMatchSearch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}