{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate,useLocation,Link}from'react-router-dom';import matchesService from'../../services/matchesServiceEnhanced';// Changed to enhanced service\nimport LoadingSpinner from'../../components/common/LoadingSpinner';import{getMatchType,getMatchTypeClass,formatMatchDate,getRelativeTime}from'../../utils/matchUtils';import'../../styles/matches.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MatchSearch=()=>{const navigate=useNavigate();const location=useLocation();const urlParams=new URLSearchParams(location.search);const tournamentId=urlParams.get('tournamentId');const[loading,setLoading]=useState(false);const[searching,setSearching]=useState(false);const[error,setError]=useState(null);const[matches,setMatches]=useState([]);const[selectedMatches,setSelectedMatches]=useState([]);// Form state\nconst[searchForm,setSearchForm]=useState({playerName:'',platform:'steam',timeRange:'24h',gameMode:'all',mapName:'all',customMatchOnly:true,useEnhancedMode:true// Added enhanced mode flag\n});// Platform options\nconst platforms=[{value:'steam',label:'Steam (PC)'},{value:'psn',label:'PlayStation'},{value:'xbox',label:'Xbox'}];// Time range options\nconst timeRanges=[{value:'24h',label:'Last 24 hours'},{value:'48h',label:'Last 48 hours'},{value:'7d',label:'Last 7 days'},{value:'14d',label:'Last 14 days'}];// Game mode options\nconst gameModes=[{value:'all',label:'All Modes'},{value:'squad',label:'Squad'},{value:'squad-fpp',label:'Squad (FPP)'},{value:'duo',label:'Duo'},{value:'duo-fpp',label:'Duo (FPP)'},{value:'solo',label:'Solo'},{value:'solo-fpp',label:'Solo (FPP)'}];// Map options\nconst maps=[{value:'all',label:'All Maps'},{value:'Baltic_Main',label:'Erangel'},{value:'Desert_Main',label:'Miramar'},{value:'Savage_Main',label:'Sanhok'},{value:'DihorOtok_Main',label:'Vikendi'},{value:'Tiger_Main',label:'Taego'},{value:'Kiki_Main',label:'Deston'}];// Handle input changes\nconst handleInputChange=e=>{const{name,value,type,checked}=e.target;setSearchForm(prev=>({...prev,[name]:type==='checkbox'?checked:value}));};// Load saved state from sessionStorage on mount\nuseEffect(()=>{try{// Check if we have a saved search state\nconst savedState=sessionStorage.getItem('lastMatchSearch');if(savedState){const{searchForm:savedForm,matches:savedMatches,timestamp}=JSON.parse(savedState);// Only restore if the saved state is relatively fresh (within the last hour)\nconst isStateFresh=Date.now()-timestamp<3600000;// 1 hour\nif(isStateFresh){console.log('Restoring previous search state');setSearchForm(savedForm);setMatches(savedMatches);}}}catch(error){console.error('Error restoring search state:',error);// Silently fail - just use default state\n}},[]);// Handle search form submission\nconst handleSearch=async e=>{e.preventDefault();setSearching(true);setError(null);setMatches([]);try{// Updated error handling and timeout\nconst response=await matchesService.searchMatches(searchForm);setMatches(response.data);// Save search state to sessionStorage\nsessionStorage.setItem('lastMatchSearch',JSON.stringify({searchForm,matches:response.data,timestamp:Date.now()}));}catch(err){console.error('Error searching matches:',err);// Enhanced error messaging\nlet errorMessage='Failed to search matches';if(err.message.includes('ECONNRESET')||err.message.includes('reset by server')){errorMessage='Connection issue with PUBG API. Please try again with fewer results or a more specific search.';}else if(err.message.includes('timeout')){errorMessage='Search timed out. Please try a more specific search with fewer results.';}else if(err.message.includes('rate limit')){errorMessage='PUBG API rate limit reached. Please wait a moment and try again.';}else if(err.message.includes('Authentication')){errorMessage='Authentication required. Please log in and try again.';}setError(errorMessage);}finally{setSearching(false);}};// Handle match selection\nconst handleMatchSelection=matchId=>{if(selectedMatches.includes(matchId)){setSelectedMatches(selectedMatches.filter(id=>id!==matchId));}else{setSelectedMatches([...selectedMatches,matchId]);}};// Get readable map name\nconst getMapName=mapId=>{const map=maps.find(m=>m.value===mapId);return map?map.label:mapId;};// Get readable game mode\nconst getGameMode=modeId=>{const mode=gameModes.find(m=>m.value===modeId);return mode?mode.label:modeId;};// Handle adding selected matches to tournament\nconst addMatchesToTournament=async()=>{if(!tournamentId||selectedMatches.length===0){return;}setLoading(true);setError(null);try{// Use matchesService.registerMatch or a similar method here\nconst response=await fetch(`/api/tournaments/${tournamentId}/matches`,{method:'POST',headers:{'Content-Type':'application/json','Authorization':`Bearer ${localStorage.getItem('token')}`},body:JSON.stringify({matchIds:selectedMatches,stage:'group'// Default to group stage\n})});if(!response.ok){const errorData=await response.json();throw new Error(errorData.error||'Failed to add matches');}// Redirect to tournament page\nnavigate(`/tournaments/${tournamentId}`);}catch(err){console.error('Error adding matches to tournament:',err);// Enhanced error messaging for tournament operations\nlet errorMessage='Failed to add matches to tournament';if(err.message.includes('Authentication')||err.message.includes('token')){errorMessage='Authentication required. Please log in again and try adding the matches.';}else if(err.message.includes('permission')||err.message.includes('not authorized')){errorMessage='You do not have permission to add matches to this tournament.';}else if(err.message.includes('already registered')||err.message.includes('duplicate')){errorMessage='One or more matches are already registered to a tournament.';}setError(errorMessage);setLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"match-search-page\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"page-header\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"page-title\",children:\"Find Custom Matches\"}),tournamentId&&/*#__PURE__*/_jsx(\"div\",{className:\"tournament-context\",children:\"Adding matches to tournament\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"enhanced-mode-toggle\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"toggle-switch\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",name:\"useEnhancedMode\",checked:searchForm.useEnhancedMode,onChange:()=>setSearchForm(prev=>({...prev,useEnhancedMode:!prev.useEnhancedMode}))}),/*#__PURE__*/_jsx(\"span\",{className:\"toggle-slider\"})]}),/*#__PURE__*/_jsx(\"span\",{className:\"toggle-label\",children:searchForm.useEnhancedMode?'Enhanced Search Mode':'Standard Search Mode'}),/*#__PURE__*/_jsx(\"span\",{className:\"toggle-help\",children:searchForm.useEnhancedMode?'Using improved error handling and rate limiting':'Using standard search (may experience timeouts)'})]}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:/*#__PURE__*/_jsx(\"p\",{children:error})}),/*#__PURE__*/_jsxs(\"div\",{className:\"search-section\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Search Criteria\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSearch,className:\"search-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"playerName\",children:\"Player Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"playerName\",name:\"playerName\",value:searchForm.playerName,onChange:handleInputChange,placeholder:\"Enter PUBG player name\"}),/*#__PURE__*/_jsx(\"p\",{className:\"help-text\",children:\"Enter a player name to find matches they participated in\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"platform\",children:\"Platform\"}),/*#__PURE__*/_jsx(\"select\",{id:\"platform\",name:\"platform\",value:searchForm.platform,onChange:handleInputChange,children:platforms.map(option=>/*#__PURE__*/_jsx(\"option\",{value:option.value,children:option.label},option.value))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"timeRange\",children:\"Time Range\"}),/*#__PURE__*/_jsx(\"select\",{id:\"timeRange\",name:\"timeRange\",value:searchForm.timeRange,onChange:handleInputChange,children:timeRanges.map(option=>/*#__PURE__*/_jsx(\"option\",{value:option.value,children:option.label},option.value))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"gameMode\",children:\"Game Mode\"}),/*#__PURE__*/_jsx(\"select\",{id:\"gameMode\",name:\"gameMode\",value:searchForm.gameMode,onChange:handleInputChange,children:gameModes.map(option=>/*#__PURE__*/_jsx(\"option\",{value:option.value,children:option.label},option.value))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"mapName\",children:\"Map\"}),/*#__PURE__*/_jsx(\"select\",{id:\"mapName\",name:\"mapName\",value:searchForm.mapName,onChange:handleInputChange,children:maps.map(option=>/*#__PURE__*/_jsx(\"option\",{value:option.value,children:option.label},option.value))})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"form-row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"form-group checkbox-group\",children:[/*#__PURE__*/_jsxs(\"label\",{className:\"checkbox-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"customMatchOnly\",name:\"customMatchOnly\",checked:searchForm.customMatchOnly,onChange:handleInputChange}),/*#__PURE__*/_jsx(\"span\",{className:\"checkbox-label\",children:\"Custom Match Only\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"help-text\",children:\"Only show matches that are likely to be custom/tournament matches\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-actions\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn-primary\",disabled:searching,children:searching?'Searching...':'Search Matches'})})]})]}),searching?/*#__PURE__*/_jsxs(\"div\",{className:\"searching-indicator\",children:[/*#__PURE__*/_jsx(LoadingSpinner,{}),/*#__PURE__*/_jsx(\"p\",{children:\"Searching for matches...\"}),/*#__PURE__*/_jsx(\"p\",{className:\"search-status\",children:\"This may take a moment as we carefully query the PUBG API...\"})]}):matches.length>0?/*#__PURE__*/_jsxs(\"div\",{className:\"results-section\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"results-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Search Results\"}),/*#__PURE__*/_jsxs(\"p\",{children:[matches.length,\" matches found\"]}),tournamentId&&selectedMatches.length>0&&/*#__PURE__*/_jsx(\"button\",{className:\"btn-primary\",onClick:addMatchesToTournament,disabled:loading,children:loading?'Adding...':`Add ${selectedMatches.length} Matches to Tournament`})]}),/*#__PURE__*/_jsx(\"div\",{className:\"matches-list\",children:matches.map(match=>{var _match$meta,_match$meta2;const matchId=match.data.id;const matchData=match.data.attributes;// Get match type from meta or determine it from attributes\nconst matchType=((_match$meta=match.meta)===null||_match$meta===void 0?void 0:_match$meta.matchType)||getMatchType(match);const isRegistered=((_match$meta2=match.meta)===null||_match$meta2===void 0?void 0:_match$meta2.isRegistered)||false;const isSelected=selectedMatches.includes(matchId);return/*#__PURE__*/_jsxs(\"div\",{className:`match-card ${getMatchTypeClass(matchType)} ${isRegistered?'registered':''} ${isSelected?'selected':''}`,children:[tournamentId&&!isRegistered&&/*#__PURE__*/_jsx(\"div\",{className:\"match-select\",children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:`select-${matchId}`,checked:isSelected,onChange:()=>handleMatchSelection(matchId)})}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-meta\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"match-id\",children:[\"ID: \",matchId.substring(0,8),\"...\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"match-date\",title:formatMatchDate(matchData.createdAt),children:getRelativeTime(matchData.createdAt)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"match-map\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Map:\"}),\" \",getMapName(matchData.mapName)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-mode\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Mode:\"}),\" \",getGameMode(matchData.gameMode)]}),/*#__PURE__*/_jsxs(\"div\",{className:\"match-players\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Players:\"}),\" \",matchData.playerCount||'Unknown']})]}),matchType!=='PUBLIC'&&/*#__PURE__*/_jsxs(\"div\",{className:`match-type-indicator ${matchType.toLowerCase()}-indicator`,children:[/*#__PURE__*/_jsxs(\"span\",{className:\"badge\",children:[matchType,\" Match\"]}),matchType==='CUSTOM'&&match.meta.verificationScore&&/*#__PURE__*/_jsxs(\"span\",{className:\"verification-score\",children:[match.meta.verificationScore,\"% match\"]})]}),isRegistered&&/*#__PURE__*/_jsxs(\"div\",{className:\"registered-indicator\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"badge\",children:\"Registered\"}),match.meta.verified&&/*#__PURE__*/_jsx(\"span\",{className:\"verified-badge\",children:\"Verified\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"match-actions\",children:/*#__PURE__*/_jsx(Link,{to:`/matches/${matchId}`,className:\"btn-secondary\",children:\"View Details\"})})]},matchId);})})]}):!searching&&/*#__PURE__*/_jsxs(\"div\",{className:\"no-results\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Search for matches by entering a player name and using the filters above.\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"search-tips\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Tips:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Enter the name of a player who participated in the custom match\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Choose a narrower time range if you know when the match occurred\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Filter by game mode and map if known\"}),/*#__PURE__*/_jsx(\"li\",{children:\"The enhanced search mode is more reliable but returns fewer initial results\"})]})]})]})]})});};export default MatchSearch;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","Link","matchesService","LoadingSpinner","getMatchType","getMatchTypeClass","formatMatchDate","getRelativeTime","jsx","_jsx","jsxs","_jsxs","MatchSearch","navigate","location","urlParams","URLSearchParams","search","tournamentId","get","loading","setLoading","searching","setSearching","error","setError","matches","setMatches","selectedMatches","setSelectedMatches","searchForm","setSearchForm","playerName","platform","timeRange","gameMode","mapName","customMatchOnly","useEnhancedMode","platforms","value","label","timeRanges","gameModes","maps","handleInputChange","e","name","type","checked","target","prev","savedState","sessionStorage","getItem","savedForm","savedMatches","timestamp","JSON","parse","isStateFresh","Date","now","console","log","handleSearch","preventDefault","response","searchMatches","data","setItem","stringify","err","errorMessage","message","includes","handleMatchSelection","matchId","filter","id","getMapName","mapId","map","find","m","getGameMode","modeId","mode","addMatchesToTournament","length","fetch","method","headers","localStorage","body","matchIds","stage","ok","errorData","json","Error","className","children","onChange","onSubmit","htmlFor","placeholder","option","disabled","onClick","match","_match$meta","_match$meta2","matchData","attributes","matchType","meta","isRegistered","isSelected","substring","title","createdAt","playerCount","toLowerCase","verificationScore","verified","to"],"sources":["C:/Users/emil/OneDrive/Documents/development/apiDevelopment/pubg-tournament-tracker/client/src/pages/matches/MatchSearch.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation, Link } from 'react-router-dom';\nimport matchesService from '../../services/matchesServiceEnhanced'; // Changed to enhanced service\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\nimport { getMatchType, getMatchTypeClass, formatMatchDate, getRelativeTime } from '../../utils/matchUtils';\nimport '../../styles/matches.css';\n\nconst MatchSearch = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const urlParams = new URLSearchParams(location.search);\n  const tournamentId = urlParams.get('tournamentId');\n  \n  const [loading, setLoading] = useState(false);\n  const [searching, setSearching] = useState(false);\n  const [error, setError] = useState(null);\n  const [matches, setMatches] = useState([]);\n  const [selectedMatches, setSelectedMatches] = useState([]);\n  \n  // Form state\n  const [searchForm, setSearchForm] = useState({\n    playerName: '',\n    platform: 'steam',\n    timeRange: '24h',\n    gameMode: 'all',\n    mapName: 'all',\n    customMatchOnly: true,\n    useEnhancedMode: true // Added enhanced mode flag\n  });\n  \n  // Platform options\n  const platforms = [\n    { value: 'steam', label: 'Steam (PC)' },\n    { value: 'psn', label: 'PlayStation' },\n    { value: 'xbox', label: 'Xbox' }\n  ];\n  \n  // Time range options\n  const timeRanges = [\n    { value: '24h', label: 'Last 24 hours' },\n    { value: '48h', label: 'Last 48 hours' },\n    { value: '7d', label: 'Last 7 days' },\n    { value: '14d', label: 'Last 14 days' }\n  ];\n  \n  // Game mode options\n  const gameModes = [\n    { value: 'all', label: 'All Modes' },\n    { value: 'squad', label: 'Squad' },\n    { value: 'squad-fpp', label: 'Squad (FPP)' },\n    { value: 'duo', label: 'Duo' },\n    { value: 'duo-fpp', label: 'Duo (FPP)' },\n    { value: 'solo', label: 'Solo' },\n    { value: 'solo-fpp', label: 'Solo (FPP)' }\n  ];\n  \n  // Map options\n  const maps = [\n    { value: 'all', label: 'All Maps' },\n    { value: 'Baltic_Main', label: 'Erangel' },\n    { value: 'Desert_Main', label: 'Miramar' },\n    { value: 'Savage_Main', label: 'Sanhok' },\n    { value: 'DihorOtok_Main', label: 'Vikendi' },\n    { value: 'Tiger_Main', label: 'Taego' },\n    { value: 'Kiki_Main', label: 'Deston' }\n  ];\n  \n  // Handle input changes\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setSearchForm(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n  \n  // Load saved state from sessionStorage on mount\n  useEffect(() => {\n    try {\n      // Check if we have a saved search state\n      const savedState = sessionStorage.getItem('lastMatchSearch');\n      if (savedState) {\n        const { searchForm: savedForm, matches: savedMatches, timestamp } = JSON.parse(savedState);\n        \n        // Only restore if the saved state is relatively fresh (within the last hour)\n        const isStateFresh = Date.now() - timestamp < 3600000; // 1 hour\n        \n        if (isStateFresh) {\n          console.log('Restoring previous search state');\n          setSearchForm(savedForm);\n          setMatches(savedMatches);\n        }\n      }\n    } catch (error) {\n      console.error('Error restoring search state:', error);\n      // Silently fail - just use default state\n    }\n  }, []);\n\n  // Handle search form submission\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    setSearching(true);\n    setError(null);\n    setMatches([]);\n    \n    try {\n      // Updated error handling and timeout\n      const response = await matchesService.searchMatches(searchForm);\n      setMatches(response.data);\n      \n      // Save search state to sessionStorage\n      sessionStorage.setItem('lastMatchSearch', JSON.stringify({\n        searchForm,\n        matches: response.data,\n        timestamp: Date.now()\n      }));\n    } catch (err) {\n      console.error('Error searching matches:', err);\n      \n      // Enhanced error messaging\n      let errorMessage = 'Failed to search matches';\n      \n      if (err.message.includes('ECONNRESET') || err.message.includes('reset by server')) {\n        errorMessage = 'Connection issue with PUBG API. Please try again with fewer results or a more specific search.';\n      } else if (err.message.includes('timeout')) {\n        errorMessage = 'Search timed out. Please try a more specific search with fewer results.';\n      } else if (err.message.includes('rate limit')) {\n        errorMessage = 'PUBG API rate limit reached. Please wait a moment and try again.';\n      } else if (err.message.includes('Authentication')) {\n        errorMessage = 'Authentication required. Please log in and try again.';\n      }\n      \n      setError(errorMessage);\n    } finally {\n      setSearching(false);\n    }\n  };\n  \n  // Handle match selection\n  const handleMatchSelection = (matchId) => {\n    if (selectedMatches.includes(matchId)) {\n      setSelectedMatches(selectedMatches.filter(id => id !== matchId));\n    } else {\n      setSelectedMatches([...selectedMatches, matchId]);\n    }\n  };\n  \n  // Get readable map name\n  const getMapName = (mapId) => {\n    const map = maps.find(m => m.value === mapId);\n    return map ? map.label : mapId;\n  };\n  \n  // Get readable game mode\n  const getGameMode = (modeId) => {\n    const mode = gameModes.find(m => m.value === modeId);\n    return mode ? mode.label : modeId;\n  };\n  \n  // Handle adding selected matches to tournament\n  const addMatchesToTournament = async () => {\n    if (!tournamentId || selectedMatches.length === 0) {\n      return;\n    }\n    \n    setLoading(true);\n    setError(null);\n    \n    try {\n      // Use matchesService.registerMatch or a similar method here\n      const response = await fetch(`/api/tournaments/${tournamentId}/matches`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('token')}`\n        },\n        body: JSON.stringify({\n          matchIds: selectedMatches,\n          stage: 'group' // Default to group stage\n        })\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to add matches');\n      }\n      \n      // Redirect to tournament page\n      navigate(`/tournaments/${tournamentId}`);\n    } catch (err) {\n      console.error('Error adding matches to tournament:', err);\n      \n      // Enhanced error messaging for tournament operations\n      let errorMessage = 'Failed to add matches to tournament';\n      \n      if (err.message.includes('Authentication') || err.message.includes('token')) {\n        errorMessage = 'Authentication required. Please log in again and try adding the matches.';\n      } else if (err.message.includes('permission') || err.message.includes('not authorized')) {\n        errorMessage = 'You do not have permission to add matches to this tournament.';\n      } else if (err.message.includes('already registered') || err.message.includes('duplicate')) {\n        errorMessage = 'One or more matches are already registered to a tournament.';\n      }\n      \n      setError(errorMessage);\n      setLoading(false);\n    }\n  };\n  \n  return (\n    <div className=\"match-search-page\">\n      <div className=\"container\">\n        <div className=\"page-header\">\n          <h1 className=\"page-title\">Find Custom Matches</h1>\n          {tournamentId && (\n            <div className=\"tournament-context\">\n              Adding matches to tournament\n            </div>\n          )}\n        </div>\n        \n        {/* Enhanced Mode Toggle */}\n        <div className=\"enhanced-mode-toggle\">\n          <label className=\"toggle-switch\">\n            <input\n              type=\"checkbox\"\n              name=\"useEnhancedMode\"\n              checked={searchForm.useEnhancedMode}\n              onChange={() => \n                setSearchForm(prev => ({ \n                  ...prev, \n                  useEnhancedMode: !prev.useEnhancedMode \n                }))\n              }\n            />\n            <span className=\"toggle-slider\"></span>\n          </label>\n          <span className=\"toggle-label\">\n            {searchForm.useEnhancedMode ? 'Enhanced Search Mode' : 'Standard Search Mode'}\n          </span>\n          <span className=\"toggle-help\">\n            {searchForm.useEnhancedMode ? \n              'Using improved error handling and rate limiting' : \n              'Using standard search (may experience timeouts)'}\n          </span>\n        </div>\n        \n        {error && (\n          <div className=\"error-message\">\n            <p>{error}</p>\n          </div>\n        )}\n        \n        <div className=\"search-section\">\n          <h2>Search Criteria</h2>\n          <form onSubmit={handleSearch} className=\"search-form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"playerName\">Player Name</label>\n              <input\n                type=\"text\"\n                id=\"playerName\"\n                name=\"playerName\"\n                value={searchForm.playerName}\n                onChange={handleInputChange}\n                placeholder=\"Enter PUBG player name\"\n              />\n              <p className=\"help-text\">\n                Enter a player name to find matches they participated in\n              </p>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"platform\">Platform</label>\n                <select\n                  id=\"platform\"\n                  name=\"platform\"\n                  value={searchForm.platform}\n                  onChange={handleInputChange}\n                >\n                  {platforms.map(option => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"timeRange\">Time Range</label>\n                <select\n                  id=\"timeRange\"\n                  name=\"timeRange\"\n                  value={searchForm.timeRange}\n                  onChange={handleInputChange}\n                >\n                  {timeRanges.map(option => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group\">\n                <label htmlFor=\"gameMode\">Game Mode</label>\n                <select\n                  id=\"gameMode\"\n                  name=\"gameMode\"\n                  value={searchForm.gameMode}\n                  onChange={handleInputChange}\n                >\n                  {gameModes.map(option => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"mapName\">Map</label>\n                <select\n                  id=\"mapName\"\n                  name=\"mapName\"\n                  value={searchForm.mapName}\n                  onChange={handleInputChange}\n                >\n                  {maps.map(option => (\n                    <option key={option.value} value={option.value}>\n                      {option.label}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            \n            <div className=\"form-row\">\n              <div className=\"form-group checkbox-group\">\n                <label className=\"checkbox-container\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"customMatchOnly\"\n                    name=\"customMatchOnly\"\n                    checked={searchForm.customMatchOnly}\n                    onChange={handleInputChange}\n                  />\n                  <span className=\"checkbox-label\">Custom Match Only</span>\n                </label>\n                <p className=\"help-text\">\n                  Only show matches that are likely to be custom/tournament matches\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"form-actions\">\n              <button type=\"submit\" className=\"btn-primary\" disabled={searching}>\n                {searching ? 'Searching...' : 'Search Matches'}\n              </button>\n            </div>\n          </form>\n        </div>\n        \n        {searching ? (\n          <div className=\"searching-indicator\">\n            <LoadingSpinner />\n            <p>Searching for matches...</p>\n            <p className=\"search-status\">This may take a moment as we carefully query the PUBG API...</p>\n          </div>\n        ) : matches.length > 0 ? (\n          <div className=\"results-section\">\n            <div className=\"results-header\">\n              <h2>Search Results</h2>\n              <p>{matches.length} matches found</p>\n              \n              {tournamentId && selectedMatches.length > 0 && (\n                <button \n                  className=\"btn-primary\"\n                  onClick={addMatchesToTournament}\n                  disabled={loading}\n                >\n                  {loading ? 'Adding...' : `Add ${selectedMatches.length} Matches to Tournament`}\n                </button>\n              )}\n            </div>\n            \n            <div className=\"matches-list\">\n              {matches.map(match => {\n                const matchId = match.data.id;\n                const matchData = match.data.attributes;\n                // Get match type from meta or determine it from attributes\n                const matchType = match.meta?.matchType || getMatchType(match);\n                const isRegistered = match.meta?.isRegistered || false;\n                const isSelected = selectedMatches.includes(matchId);\n                \n                return (\n                  <div \n                    key={matchId} \n                    className={`match-card ${getMatchTypeClass(matchType)} ${isRegistered ? 'registered' : ''} ${isSelected ? 'selected' : ''}`}\n                  >\n                    {tournamentId && !isRegistered && (\n                      <div className=\"match-select\">\n                        <input\n                          type=\"checkbox\"\n                          id={`select-${matchId}`}\n                          checked={isSelected}\n                          onChange={() => handleMatchSelection(matchId)}\n                        />\n                      </div>\n                    )}\n                    \n                    <div className=\"match-info\">\n                      <div className=\"match-meta\">\n                        <span className=\"match-id\">ID: {matchId.substring(0, 8)}...</span>\n                        <span className=\"match-date\" title={formatMatchDate(matchData.createdAt)}>{getRelativeTime(matchData.createdAt)}</span>\n                      </div>\n                      \n                      <div className=\"match-details\">\n                        <div className=\"match-map\">\n                          <strong>Map:</strong> {getMapName(matchData.mapName)}\n                        </div>\n                        <div className=\"match-mode\">\n                          <strong>Mode:</strong> {getGameMode(matchData.gameMode)}\n                        </div>\n                        <div className=\"match-players\">\n                          <strong>Players:</strong> {matchData.playerCount || 'Unknown'}\n                        </div>\n                      </div>\n                      \n                      {matchType !== 'PUBLIC' && (\n                        <div className={`match-type-indicator ${matchType.toLowerCase()}-indicator`}>\n                          <span className=\"badge\">{matchType} Match</span>\n                          {matchType === 'CUSTOM' && match.meta.verificationScore && (\n                            <span className=\"verification-score\">\n                              {match.meta.verificationScore}% match\n                            </span>\n                          )}\n                        </div>\n                      )}\n                      \n                      {isRegistered && (\n                        <div className=\"registered-indicator\">\n                          <span className=\"badge\">Registered</span>\n                          {match.meta.verified && (\n                            <span className=\"verified-badge\">Verified</span>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                    \n                    <div className=\"match-actions\">\n                      <Link to={`/matches/${matchId}`} className=\"btn-secondary\">\n                        View Details\n                      </Link>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        ) : (\n          !searching && (\n            <div className=\"no-results\">\n              <p>Search for matches by entering a player name and using the filters above.</p>\n              <p className=\"search-tips\">\n                <strong>Tips:</strong>\n                <ul>\n                  <li>Enter the name of a player who participated in the custom match</li>\n                  <li>Choose a narrower time range if you know when the match occurred</li>\n                  <li>Filter by game mode and map if known</li>\n                  <li>The enhanced search mode is more reliable but returns fewer initial results</li>\n                </ul>\n              </p>\n            </div>\n          )\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MatchSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}