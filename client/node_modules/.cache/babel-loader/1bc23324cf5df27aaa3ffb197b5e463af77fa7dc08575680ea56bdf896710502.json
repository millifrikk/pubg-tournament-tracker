{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom/client';import App from'./App';import{BrowserRouter}from'react-router-dom';import{AuthProvider}from'./contexts/AuthContext';import axios from'axios';import'./index.css';// Global axios configuration\nimport{jsx as _jsx}from\"react/jsx-runtime\";axios.defaults.timeout=25000;// 25 seconds default timeout\n// Configure axios for better reliability\naxios.defaults.maxRedirects=5;axios.defaults.maxContentLength=10*1024*1024;// 10MB max\naxios.defaults.maxBodyLength=10*1024*1024;// 10MB max\n// Add a request interceptor for debugging\naxios.interceptors.request.use(function(config){var _config$method;// Do something before request is sent\nconsole.log(`Making ${(_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase()} request to: ${config.url}`);return config;},function(error){// Do something with request error\nconsole.error('Request error intercepted:',error);return Promise.reject(error);});// Add a response interceptor for better error handling\naxios.interceptors.response.use(function(response){// Any status code within the range of 2xx will trigger this function\nreturn response;},function(error){// Any status codes outside the range of 2xx will trigger this function\nconsole.error('Response error intercepted:',error.message);// Add more context to error message\nif(error.code==='ECONNABORTED'){error.message='Request timed out. The server might be overloaded.';}else if(error.code==='ECONNRESET'){error.message='Connection reset by server. Please try again later. This likely means the PUBG API is experiencing issues.';}else if(error.code==='ERR_NETWORK'){error.message='Network error. Please check your internet connection and try again.';}else if(!error.response&&error.request){error.message='No response received from server. Please check your connection.';}else if(error.response){// Handle specific status codes\nif(error.response.status===429){error.message='PUBG API rate limit exceeded. Please try again later.';}else if(error.response.status===503){error.message='Service unavailable. The API may be temporarily down for maintenance.';}else if(error.response.status===504){error.message='Gateway timeout. The server took too long to respond.';}// Add the error message from the response if available\nif(error.response.data&&error.response.data.error){error.message=`${error.message} - ${error.response.data.error}`;}}// Add a retry method to the error object \n// This makes it easier to implement retries in components\nerror.retry=async function(){let delayMs=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1000;await new Promise(resolve=>setTimeout(resolve,delayMs));return axios(this.config);};return Promise.reject(error);});const root=ReactDOM.createRoot(document.getElementById('root'));root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(BrowserRouter,{children:/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsx(App,{})})})}));","map":{"version":3,"names":["React","ReactDOM","App","BrowserRouter","AuthProvider","axios","jsx","_jsx","defaults","timeout","maxRedirects","maxContentLength","maxBodyLength","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","message","code","status","data","retry","delayMs","arguments","length","undefined","resolve","setTimeout","root","createRoot","document","getElementById","render","StrictMode","children"],"sources":["C:/Users/emil/OneDrive/Documents/development/apiDevelopment/pubg-tournament-tracker/client/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { AuthProvider } from './contexts/AuthContext';\nimport axios from 'axios';\nimport './index.css';\n\n// Global axios configuration\naxios.defaults.timeout = 25000; // 25 seconds default timeout\n\n// Configure axios for better reliability\naxios.defaults.maxRedirects = 5;\naxios.defaults.maxContentLength = 10 * 1024 * 1024; // 10MB max\naxios.defaults.maxBodyLength = 10 * 1024 * 1024; // 10MB max\n\n// Add a request interceptor for debugging\naxios.interceptors.request.use(function (config) {\n  // Do something before request is sent\n  console.log(`Making ${config.method?.toUpperCase()} request to: ${config.url}`);\n  return config;\n}, function (error) {\n  // Do something with request error\n  console.error('Request error intercepted:', error);\n  return Promise.reject(error);\n});\n\n// Add a response interceptor for better error handling\naxios.interceptors.response.use(function (response) {\n  // Any status code within the range of 2xx will trigger this function\n  return response;\n}, function (error) {\n  // Any status codes outside the range of 2xx will trigger this function\n  console.error('Response error intercepted:', error.message);\n  \n  // Add more context to error message\n  if (error.code === 'ECONNABORTED') {\n    error.message = 'Request timed out. The server might be overloaded.';\n  } else if (error.code === 'ECONNRESET') {\n    error.message = 'Connection reset by server. Please try again later. This likely means the PUBG API is experiencing issues.';\n  } else if (error.code === 'ERR_NETWORK') {\n    error.message = 'Network error. Please check your internet connection and try again.';  \n  } else if (!error.response && error.request) {\n    error.message = 'No response received from server. Please check your connection.';\n  } else if (error.response) {\n    // Handle specific status codes\n    if (error.response.status === 429) {\n      error.message = 'PUBG API rate limit exceeded. Please try again later.';\n    } else if (error.response.status === 503) {\n      error.message = 'Service unavailable. The API may be temporarily down for maintenance.';\n    } else if (error.response.status === 504) {\n      error.message = 'Gateway timeout. The server took too long to respond.';\n    }\n    \n    // Add the error message from the response if available\n    if (error.response.data && error.response.data.error) {\n      error.message = `${error.message} - ${error.response.data.error}`;\n    }\n  }\n  \n  // Add a retry method to the error object \n  // This makes it easier to implement retries in components\n  error.retry = async function(delayMs = 1000) {\n    await new Promise(resolve => setTimeout(resolve, delayMs));\n    return axios(this.config);\n  };\n  \n  return Promise.reject(error);\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <AuthProvider>\n        <App />\n      </AuthProvider>\n    </BrowserRouter>\n  </React.StrictMode>\n);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}