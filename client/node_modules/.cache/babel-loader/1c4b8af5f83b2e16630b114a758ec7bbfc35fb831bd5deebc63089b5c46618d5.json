{"ast":null,"code":"import React,{useState,useEffect,useRef,memo}from'react';import{useSocket}from'../../contexts/SocketContext';// Optimized implementation of a live match feed component\n// Using React.memo to prevent unnecessary re-renders\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LiveMatchFeed=/*#__PURE__*/memo(_ref=>{let{matchId,initialMatchData}=_ref;const[events,setEvents]=useState([]);const[isLive,setIsLive]=useState(false);const eventContainerRef=useRef(null);const{subscribeToEvent}=useSocket();// Set up socket subscription\nuseEffect(()=>{console.log(`LiveMatchFeed mounting for match: ${matchId}`);// Simulate initial events from the match data\nif(initialMatchData){const fakeEvents=[{id:1,type:'match_start',message:'Match started',timestamp:new Date().toISOString()},{id:2,type:'info',message:'Initial match data loaded',timestamp:new Date().toISOString()}];setEvents(fakeEvents);}// Set up live connection - with error handling\nlet unsubscribe=()=>{};try{if(subscribeToEvent){setIsLive(true);// Subscribe to match events\nunsubscribe=subscribeToEvent(`match:${matchId}:event`,eventData=>{// Process incoming event\nconsole.log('Received match event:',eventData);// Add to events with a functional update to avoid stale state\nsetEvents(prevEvents=>[...prevEvents,{id:Date.now(),...eventData,timestamp:new Date().toISOString()}]);});}}catch(error){console.error('Error setting up match event subscription:',error);setIsLive(false);}// Clean up subscription on unmount\nreturn()=>{console.log(`LiveMatchFeed unmounting for match: ${matchId}`);try{unsubscribe();}catch(error){console.error('Error cleaning up socket subscription:',error);}};},[matchId,initialMatchData,subscribeToEvent]);// Auto-scroll to bottom of events when new events arrive\nuseEffect(()=>{if(eventContainerRef.current){eventContainerRef.current.scrollTop=eventContainerRef.current.scrollHeight;}},[events.length]);return/*#__PURE__*/_jsxs(\"div\",{className:\"live-match-feed-container\",style:{padding:'15px',border:'1px solid #ddd',borderRadius:'8px',background:'#f9f9f9',transform:'translateZ(0)',willChange:'transform'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"feed-header\",style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:'15px'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{margin:0},children:\"Live Match Feed\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"connection-status\",style:{display:'flex',alignItems:'center',fontSize:'14px'},children:[/*#__PURE__*/_jsx(\"span\",{style:{display:'inline-block',width:'10px',height:'10px',borderRadius:'50%',backgroundColor:isLive?'#4caf50':'#f44336',marginRight:'5px'}}),isLive?'Live':'Disconnected']})]}),/*#__PURE__*/_jsx(\"div\",{ref:eventContainerRef,className:\"event-container\",style:{height:'300px',overflowY:'auto',border:'1px solid #ddd',borderRadius:'4px',backgroundColor:'white',padding:'10px'},children:events.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-events\",style:{textAlign:'center',padding:'20px',color:'#999'},children:\"No events yet. Waiting for match updates...\"}):events.map(event=>/*#__PURE__*/_jsxs(\"div\",{className:`event-item event-${event.type}`,style:{padding:'8px',marginBottom:'8px',borderLeft:'3px solid #2196F3',backgroundColor:'#f0f8ff'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"event-time\",style:{fontSize:'12px',color:'#777'},children:new Date(event.timestamp).toLocaleTimeString()}),/*#__PURE__*/_jsx(\"div\",{className:\"event-message\",children:event.message})]},event.id))}),/*#__PURE__*/_jsx(\"div\",{className:\"feed-footer\",style:{marginTop:'10px',fontSize:'13px',color:'#666'},children:\"This is a simulated live feed for demonstration purposes.\"})]});});// Add a displayName for debugging\nLiveMatchFeed.displayName='LiveMatchFeed';export default LiveMatchFeed;","map":{"version":3,"names":["React","useState","useEffect","useRef","memo","useSocket","jsx","_jsx","jsxs","_jsxs","LiveMatchFeed","_ref","matchId","initialMatchData","events","setEvents","isLive","setIsLive","eventContainerRef","subscribeToEvent","console","log","fakeEvents","id","type","message","timestamp","Date","toISOString","unsubscribe","eventData","prevEvents","now","error","current","scrollTop","scrollHeight","length","className","style","padding","border","borderRadius","background","transform","willChange","children","display","justifyContent","alignItems","marginBottom","margin","fontSize","width","height","backgroundColor","marginRight","ref","overflowY","textAlign","color","map","event","borderLeft","toLocaleTimeString","marginTop","displayName"],"sources":["C:/Users/emil/OneDrive/Documents/development/apiDevelopment/pubg-tournament-tracker/client/src/components/common/LiveMatchFeed.js"],"sourcesContent":["import React, { useState, useEffect, useRef, memo } from 'react';\nimport { useSocket } from '../../contexts/SocketContext';\n\n// Optimized implementation of a live match feed component\n// Using React.memo to prevent unnecessary re-renders\nconst LiveMatchFeed = memo(({ matchId, initialMatchData }) => {\n  const [events, setEvents] = useState([]);\n  const [isLive, setIsLive] = useState(false);\n  const eventContainerRef = useRef(null);\n  const { subscribeToEvent } = useSocket();\n\n  // Set up socket subscription\n  useEffect(() => {\n    console.log(`LiveMatchFeed mounting for match: ${matchId}`);\n    \n    // Simulate initial events from the match data\n    if (initialMatchData) {\n      const fakeEvents = [\n        { id: 1, type: 'match_start', message: 'Match started', timestamp: new Date().toISOString() },\n        { id: 2, type: 'info', message: 'Initial match data loaded', timestamp: new Date().toISOString() }\n      ];\n      setEvents(fakeEvents);\n    }\n\n    // Set up live connection - with error handling\n    let unsubscribe = () => {};\n    try {\n      if (subscribeToEvent) {\n        setIsLive(true);\n        \n        // Subscribe to match events\n        unsubscribe = subscribeToEvent(`match:${matchId}:event`, (eventData) => {\n          // Process incoming event\n          console.log('Received match event:', eventData);\n          \n          // Add to events with a functional update to avoid stale state\n          setEvents(prevEvents => [...prevEvents, {\n            id: Date.now(),\n            ...eventData,\n            timestamp: new Date().toISOString()\n          }]);\n        });\n      }\n    } catch (error) {\n      console.error('Error setting up match event subscription:', error);\n      setIsLive(false);\n    }\n\n    // Clean up subscription on unmount\n    return () => {\n      console.log(`LiveMatchFeed unmounting for match: ${matchId}`);\n      try {\n        unsubscribe();\n      } catch (error) {\n        console.error('Error cleaning up socket subscription:', error);\n      }\n    };\n  }, [matchId, initialMatchData, subscribeToEvent]);\n\n  // Auto-scroll to bottom of events when new events arrive\n  useEffect(() => {\n    if (eventContainerRef.current) {\n      eventContainerRef.current.scrollTop = eventContainerRef.current.scrollHeight;\n    }\n  }, [events.length]);\n\n  return (\n    <div className=\"live-match-feed-container\" style={{ \n      padding: '15px', \n      border: '1px solid #ddd', \n      borderRadius: '8px',\n      background: '#f9f9f9',\n      transform: 'translateZ(0)',\n      willChange: 'transform' \n    }}>\n      <div className=\"feed-header\" style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        marginBottom: '15px'\n      }}>\n        <h3 style={{ margin: 0 }}>Live Match Feed</h3>\n        <div className=\"connection-status\" style={{\n          display: 'flex',\n          alignItems: 'center',\n          fontSize: '14px'\n        }}>\n          <span style={{ \n            display: 'inline-block',\n            width: '10px',\n            height: '10px',\n            borderRadius: '50%',\n            backgroundColor: isLive ? '#4caf50' : '#f44336',\n            marginRight: '5px'\n          }}></span>\n          {isLive ? 'Live' : 'Disconnected'}\n        </div>\n      </div>\n      \n      <div \n        ref={eventContainerRef} \n        className=\"event-container\" \n        style={{ \n          height: '300px', \n          overflowY: 'auto',\n          border: '1px solid #ddd',\n          borderRadius: '4px',\n          backgroundColor: 'white',\n          padding: '10px'\n        }}\n      >\n        {events.length === 0 ? (\n          <div className=\"no-events\" style={{ textAlign: 'center', padding: '20px', color: '#999' }}>\n            No events yet. Waiting for match updates...\n          </div>\n        ) : (\n          events.map(event => (\n            <div \n              key={event.id}\n              className={`event-item event-${event.type}`} \n              style={{\n                padding: '8px',\n                marginBottom: '8px',\n                borderLeft: '3px solid #2196F3',\n                backgroundColor: '#f0f8ff'\n              }}\n            >\n              <div className=\"event-time\" style={{ fontSize: '12px', color: '#777' }}>\n                {new Date(event.timestamp).toLocaleTimeString()}\n              </div>\n              <div className=\"event-message\">\n                {event.message}\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n      \n      <div className=\"feed-footer\" style={{ marginTop: '10px', fontSize: '13px', color: '#666' }}>\n        This is a simulated live feed for demonstration purposes.\n      </div>\n    </div>\n  );\n});\n\n// Add a displayName for debugging\nLiveMatchFeed.displayName = 'LiveMatchFeed';\n\nexport default LiveMatchFeed;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}