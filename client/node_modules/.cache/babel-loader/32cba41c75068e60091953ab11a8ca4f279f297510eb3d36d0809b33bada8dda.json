{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emil\\\\OneDrive\\\\Documents\\\\development\\\\apiDevelopment\\\\pubg-tournament-tracker\\\\client\\\\src\\\\contexts\\\\SocketContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nexport const useSocket = () => {\n  _s();\n  return useContext(SocketContext);\n};\n_s(useSocket, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const SocketProvider = ({\n  children\n}) => {\n  _s2();\n  const [socket, setSocket] = useState(null);\n  const {\n    isAuthenticated,\n    token\n  } = useAuth();\n  const [connected, setConnected] = useState(false);\n  useEffect(() => {\n    if (isAuthenticated && token) {\n      // Create socket connection\n      const socketInstance = io(process.env.REACT_APP_API_URL || 'http://localhost:5000', {\n        auth: {\n          token\n        }\n      });\n\n      // Setup event listeners\n      socketInstance.on('connect', () => {\n        console.log('Socket connected');\n        setConnected(true);\n      });\n      socketInstance.on('disconnect', () => {\n        console.log('Socket disconnected');\n        setConnected(false);\n      });\n      socketInstance.on('connect_error', err => {\n        console.error('Socket connection error:', err.message);\n        setConnected(false);\n      });\n      setSocket(socketInstance);\n\n      // Cleanup on unmount\n      return () => {\n        socketInstance.disconnect();\n      };\n    }\n  }, [isAuthenticated, token]);\n\n  // Methods to join/leave rooms\n  const joinTournament = tournamentId => {\n    if (socket && connected) {\n      socket.emit('join-tournament', tournamentId);\n    }\n  };\n  const leaveTournament = tournamentId => {\n    if (socket && connected) {\n      socket.emit('leave-tournament', tournamentId);\n    }\n  };\n  const joinMatch = matchId => {\n    if (socket && connected) {\n      socket.emit('join-match', matchId);\n    }\n  };\n  const leaveMatch = matchId => {\n    if (socket && connected) {\n      socket.emit('leave-match', matchId);\n    }\n  };\n\n  // Subscribe to events\n  const subscribeTournamentUpdates = callback => {\n    if (socket) {\n      socket.on('tournament-update', callback);\n      return () => socket.off('tournament-update', callback);\n    }\n    return () => {};\n  };\n  const subscribeMatchUpdates = callback => {\n    if (socket) {\n      socket.on('match-update', callback);\n      return () => socket.off('match-update', callback);\n    }\n    return () => {};\n  };\n  const subscribeStandingsUpdates = callback => {\n    if (socket) {\n      socket.on('standings-update', callback);\n      return () => socket.off('standings-update', callback);\n    }\n    return () => {};\n  };\n  const value = {\n    socket,\n    connected,\n    joinTournament,\n    leaveTournament,\n    joinMatch,\n    leaveMatch,\n    subscribeTournamentUpdates,\n    subscribeMatchUpdates,\n    subscribeStandingsUpdates\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s2(SocketProvider, \"WLzJkd7yOAQluOXrxem96q7p00w=\", false, function () {\n  return [useAuth];\n});\n_c = SocketProvider;\nvar _c;\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","io","useAuth","jsxDEV","_jsxDEV","SocketContext","useSocket","_s","SocketProvider","children","_s2","socket","setSocket","isAuthenticated","token","connected","setConnected","socketInstance","process","env","REACT_APP_API_URL","auth","on","console","log","err","error","message","disconnect","joinTournament","tournamentId","emit","leaveTournament","joinMatch","matchId","leaveMatch","subscribeTournamentUpdates","callback","off","subscribeMatchUpdates","subscribeStandingsUpdates","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/emil/OneDrive/Documents/development/apiDevelopment/pubg-tournament-tracker/client/src/contexts/SocketContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { io } from 'socket.io-client';\nimport { useAuth } from './AuthContext';\n\nconst SocketContext = createContext();\n\nexport const useSocket = () => useContext(SocketContext);\n\nexport const SocketProvider = ({ children }) => {\n  const [socket, setSocket] = useState(null);\n  const { isAuthenticated, token } = useAuth();\n  const [connected, setConnected] = useState(false);\n\n  useEffect(() => {\n    if (isAuthenticated && token) {\n      // Create socket connection\n      const socketInstance = io(process.env.REACT_APP_API_URL || 'http://localhost:5000', {\n        auth: { token }\n      });\n\n      // Setup event listeners\n      socketInstance.on('connect', () => {\n        console.log('Socket connected');\n        setConnected(true);\n      });\n\n      socketInstance.on('disconnect', () => {\n        console.log('Socket disconnected');\n        setConnected(false);\n      });\n\n      socketInstance.on('connect_error', (err) => {\n        console.error('Socket connection error:', err.message);\n        setConnected(false);\n      });\n\n      setSocket(socketInstance);\n\n      // Cleanup on unmount\n      return () => {\n        socketInstance.disconnect();\n      };\n    }\n  }, [isAuthenticated, token]);\n\n  // Methods to join/leave rooms\n  const joinTournament = (tournamentId) => {\n    if (socket && connected) {\n      socket.emit('join-tournament', tournamentId);\n    }\n  };\n\n  const leaveTournament = (tournamentId) => {\n    if (socket && connected) {\n      socket.emit('leave-tournament', tournamentId);\n    }\n  };\n\n  const joinMatch = (matchId) => {\n    if (socket && connected) {\n      socket.emit('join-match', matchId);\n    }\n  };\n\n  const leaveMatch = (matchId) => {\n    if (socket && connected) {\n      socket.emit('leave-match', matchId);\n    }\n  };\n\n  // Subscribe to events\n  const subscribeTournamentUpdates = (callback) => {\n    if (socket) {\n      socket.on('tournament-update', callback);\n      return () => socket.off('tournament-update', callback);\n    }\n    return () => {};\n  };\n\n  const subscribeMatchUpdates = (callback) => {\n    if (socket) {\n      socket.on('match-update', callback);\n      return () => socket.off('match-update', callback);\n    }\n    return () => {};\n  };\n\n  const subscribeStandingsUpdates = (callback) => {\n    if (socket) {\n      socket.on('standings-update', callback);\n      return () => socket.off('standings-update', callback);\n    }\n    return () => {};\n  };\n\n  const value = {\n    socket,\n    connected,\n    joinTournament,\n    leaveTournament,\n    joinMatch,\n    leaveMatch,\n    subscribeTournamentUpdates,\n    subscribeMatchUpdates,\n    subscribeStandingsUpdates\n  };\n\n  return (\n    <SocketContext.Provider value={value}>\n      {children}\n    </SocketContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}