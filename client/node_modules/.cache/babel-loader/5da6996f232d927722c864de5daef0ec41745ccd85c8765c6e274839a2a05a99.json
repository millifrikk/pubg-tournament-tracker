{"ast":null,"code":"import axios from 'axios';\n\n// Create custom axios instance with improved configuration\nconst api = axios.create({\n  baseURL: '/api',\n  timeout: 120000,\n  // 2 minutes timeout\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  // Get JWT token from local storage if it exists\n  const token = localStorage.getItem('token');\n\n  // If token exists, add it to the headers\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('Request error:', error);\n  return Promise.reject(error);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response, _error$response2;\n  // Handle network errors\n  if (!error.response) {\n    console.error('Network error:', error.message);\n\n    // If it's a timeout\n    if (error.code === 'ECONNABORTED') {\n      console.error('Request timed out');\n    }\n\n    // If it's a network error (ECONNRESET, etc.)\n    if (error.message.includes('Network Error')) {\n      console.error('Network connection issue - possibly server disconnected');\n    }\n  }\n\n  // Handle 401 Unauthorized errors (invalid/expired token)\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Redirect to login or refresh token\n    console.log('Authentication error - redirecting to login');\n  }\n\n  // Handle server errors (500, etc.)\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) >= 500) {\n    console.error('Server error:', error.response.data);\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","console","Promise","reject","response","_error$response","_error$response2","message","code","includes","status","log","data"],"sources":["C:/Users/emil/OneDrive/Documents/development/apiDevelopment/pubg-tournament-tracker/client/src/utils/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\n\n// Create custom axios instance with improved configuration\nconst api = axios.create({\n  baseURL: '/api',\n  timeout: 120000, // 2 minutes timeout\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(\n  config => {\n    // Get JWT token from local storage if it exists\n    const token = localStorage.getItem('token');\n    \n    // If token exists, add it to the headers\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    \n    return config;\n  },\n  error => {\n    console.error('Request error:', error);\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor\napi.interceptors.response.use(\n  response => {\n    return response;\n  },\n  error => {\n    // Handle network errors\n    if (!error.response) {\n      console.error('Network error:', error.message);\n      \n      // If it's a timeout\n      if (error.code === 'ECONNABORTED') {\n        console.error('Request timed out');\n      }\n      \n      // If it's a network error (ECONNRESET, etc.)\n      if (error.message.includes('Network Error')) {\n        console.error('Network connection issue - possibly server disconnected');\n      }\n    }\n    \n    // Handle 401 Unauthorized errors (invalid/expired token)\n    if (error.response?.status === 401) {\n      // Redirect to login or refresh token\n      console.log('Authentication error - redirecting to login');\n    }\n    \n    // Handle server errors (500, etc.)\n    if (error.response?.status >= 500) {\n      console.error('Server error:', error.response.data);\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,MAAM;EACfC,OAAO,EAAE,MAAM;EAAE;EACjBC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BC,MAAM,IAAI;EACR;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;;EAE3C;EACA,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EAEA,OAAOD,MAAM;AACf,CAAC,EACDK,KAAK,IAAI;EACPC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;EACtC,OAAOE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAb,GAAG,CAACK,YAAY,CAACY,QAAQ,CAACV,GAAG,CAC3BU,QAAQ,IAAI;EACV,OAAOA,QAAQ;AACjB,CAAC,EACDJ,KAAK,IAAI;EAAA,IAAAK,eAAA,EAAAC,gBAAA;EACP;EACA,IAAI,CAACN,KAAK,CAACI,QAAQ,EAAE;IACnBH,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACO,OAAO,CAAC;;IAE9C;IACA,IAAIP,KAAK,CAACQ,IAAI,KAAK,cAAc,EAAE;MACjCP,OAAO,CAACD,KAAK,CAAC,mBAAmB,CAAC;IACpC;;IAEA;IACA,IAAIA,KAAK,CAACO,OAAO,CAACE,QAAQ,CAAC,eAAe,CAAC,EAAE;MAC3CR,OAAO,CAACD,KAAK,CAAC,yDAAyD,CAAC;IAC1E;EACF;;EAEA;EACA,IAAI,EAAAK,eAAA,GAAAL,KAAK,CAACI,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBK,MAAM,MAAK,GAAG,EAAE;IAClC;IACAT,OAAO,CAACU,GAAG,CAAC,6CAA6C,CAAC;EAC5D;;EAEA;EACA,IAAI,EAAAL,gBAAA,GAAAN,KAAK,CAACI,QAAQ,cAAAE,gBAAA,uBAAdA,gBAAA,CAAgBI,MAAM,KAAI,GAAG,EAAE;IACjCT,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACI,QAAQ,CAACQ,IAAI,CAAC;EACrD;EAEA,OAAOV,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}