{"ast":null,"code":"import axios from 'axios';\nimport authService from './authService';\nclass MatchesServiceEnhanced {\n  async searchMatches(criteria) {\n    try {\n      // Get auth token if available\n      const token = authService.getToken();\n\n      // Request headers\n      const headers = {};\n      if (token) {\n        headers.Authorization = `Bearer ${token}`;\n      }\n\n      // Implement retry logic with exponential backoff\n      let retries = 2;\n      let lastError = null;\n      while (retries >= 0) {\n        try {\n          console.log(`Searching for matches (attempt ${2 - retries + 1}/3)`);\n\n          // Add a timeout to prevent hanging requests\n          const response = await axios.post('/api/matches/search', criteria, {\n            headers,\n            timeout: 30000 // 30 second timeout for search\n          });\n\n          // Make sure we return the data in the expected format\n          return response.data;\n        } catch (error) {\n          lastError = error;\n\n          // If it's a 404 or other specific error, don't retry\n          if (error.response && error.response.status === 404) {\n            throw error;\n          }\n\n          // Don't retry if we've exhausted retries\n          if (retries <= 0) {\n            break;\n          }\n\n          // Wait before retry (2s, then 4s)\n          const delay = (3 - retries) * 2000;\n          console.log(`Search failed. Retrying after ${delay}ms...`);\n          await new Promise(resolve => setTimeout(resolve, delay));\n          retries--;\n        }\n      }\n\n      // If we reach here, all retries failed\n      console.error('All search attempts failed:', lastError);\n\n      // Handle specific error cases\n      if (lastError.response) {\n        // Server responded with an error status\n        if (lastError.response.status === 401) {\n          throw new Error('Authentication required');\n        } else if (lastError.response.status === 429) {\n          throw new Error('API rate limit exceeded. Please try again later.');\n        } else {\n          var _lastError$response$d;\n          throw new Error(`API error: ${((_lastError$response$d = lastError.response.data) === null || _lastError$response$d === void 0 ? void 0 : _lastError$response$d.error) || lastError.response.statusText || 'Unknown error'}`);\n        }\n      } else if (lastError.code === 'ECONNABORTED') {\n        // Request timed out\n        throw new Error('Request timed out. The server might be overloaded or try a more specific search.');\n      } else if (lastError.code === 'ECONNRESET') {\n        // Connection reset by server\n        throw new Error('Connection reset by server. Please try a more specific search with fewer results.');\n      } else if (lastError.request) {\n        // No response received\n        throw new Error('No response from server. Please check your connection and try again.');\n      } else {\n        // Something else went wrong\n        throw lastError;\n      }\n    } catch (error) {\n      console.error('Error in searchMatches:', error);\n      throw error;\n    }\n  }\n\n  // Add other methods as needed for match management\n}\nexport default new MatchesServiceEnhanced();","map":{"version":3,"names":["axios","authService","MatchesServiceEnhanced","searchMatches","criteria","token","getToken","headers","Authorization","retries","lastError","console","log","response","post","timeout","data","error","status","delay","Promise","resolve","setTimeout","Error","_lastError$response$d","statusText","code","request"],"sources":["C:/Users/emil/OneDrive/Documents/development/apiDevelopment/pubg-tournament-tracker/client/src/services/matchesServiceEnhanced.js"],"sourcesContent":["import axios from 'axios';\nimport authService from './authService';\n\nclass MatchesServiceEnhanced {\n  async searchMatches(criteria) {\n    try {\n      // Get auth token if available\n      const token = authService.getToken();\n      \n      // Request headers\n      const headers = {};\n      if (token) {\n        headers.Authorization = `Bearer ${token}`;\n      }\n\n      // Implement retry logic with exponential backoff\n      let retries = 2;\n      let lastError = null;\n      \n      while (retries >= 0) {\n        try {\n          console.log(`Searching for matches (attempt ${2 - retries + 1}/3)`);\n          \n          // Add a timeout to prevent hanging requests\n          const response = await axios.post('/api/matches/search', criteria, { \n            headers,\n            timeout: 30000 // 30 second timeout for search\n          });\n          \n          // Make sure we return the data in the expected format\n          return response.data;\n        } catch (error) {\n          lastError = error;\n          \n          // If it's a 404 or other specific error, don't retry\n          if (error.response && error.response.status === 404) {\n            throw error;\n          }\n          \n          // Don't retry if we've exhausted retries\n          if (retries <= 0) {\n            break;\n          }\n          \n          // Wait before retry (2s, then 4s)\n          const delay = (3 - retries) * 2000;\n          console.log(`Search failed. Retrying after ${delay}ms...`);\n          await new Promise(resolve => setTimeout(resolve, delay));\n          \n          retries--;\n        }\n      }\n      \n      // If we reach here, all retries failed\n      console.error('All search attempts failed:', lastError);\n      \n      // Handle specific error cases\n      if (lastError.response) {\n        // Server responded with an error status\n        if (lastError.response.status === 401) {\n          throw new Error('Authentication required');\n        } else if (lastError.response.status === 429) {\n          throw new Error('API rate limit exceeded. Please try again later.');\n        } else {\n          throw new Error(`API error: ${lastError.response.data?.error || lastError.response.statusText || 'Unknown error'}`);\n        }\n      } else if (lastError.code === 'ECONNABORTED') {\n        // Request timed out\n        throw new Error('Request timed out. The server might be overloaded or try a more specific search.');\n      } else if (lastError.code === 'ECONNRESET') {\n        // Connection reset by server\n        throw new Error('Connection reset by server. Please try a more specific search with fewer results.');\n      } else if (lastError.request) {\n        // No response received\n        throw new Error('No response from server. Please check your connection and try again.');\n      } else {\n        // Something else went wrong\n        throw lastError;\n      }\n    } catch (error) {\n      console.error('Error in searchMatches:', error);\n      throw error;\n    }\n  }\n\n  // Add other methods as needed for match management\n}\n\nexport default new MatchesServiceEnhanced();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}